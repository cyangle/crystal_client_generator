# {{#lambdaPrefixWithHash}}{{> api_info}}{{/lambdaPrefixWithHash}}

require "uri"
require "../api_client"

module {{moduleName}}
{{#operations}}
  class {{classname}}
    property api_client : ApiClient

    delegate client_side_validation, debugging, to: @api_client.config

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
{{#operation}}

    {{#summary}}
    # {{{.}}}
    {{/summary}}
    {{#notes}}
    # {{{.}}}
    {{/notes}}
    {{#allParams}}
    {{#required}}
    # @required @param {{paramName}} [{{>partial_model_generic_property_data_type}}]{{#description}} {{{description}}}{{/description}}
    {{/required}}
    {{^required}}
    # @optional @param {{paramName}} [{{>partial_model_generic_property_data_type}}]{{#description}} {{{description}}}{{/description}}
    {{/required}}
    {{/allParams}}
    # @return [{{>generic_return_property_data_type}}]
    def {{operationId}}({{#hasParams}}{{^hasOnlyOneParam}}*, {{/hasOnlyOneParam}}{{/hasParams}}{{#requiredParams}}{{paramName}} : {{>partial_model_generic_property_data_type}} = {{>partial_model_generic_property_default_value}}{{^-last}}, {{/-last}}{{/requiredParams}}{{#hasRequiredParams}}{{#hasOptionalParams}}, {{/hasOptionalParams}}{{/hasRequiredParams}}{{#optionalParams}}{{paramName}} : {{>partial_model_generic_property_data_type}} = {{>partial_model_generic_property_default_value}}{{^-last}}, {{/-last}}{{/optionalParams}}) : {{>generic_return_property_data_type}}
      {{#returnProperty}}data, _status_code, _headers = {{/returnProperty}}{{operationId}}_with_http_info({{#allParams}}{{paramName}}: {{paramName}}{{^-last}}, {{/-last}}{{/allParams}})
      {{#returnProperty}}data{{/returnProperty}}{{^returnProperty}}nil{{/returnProperty}}
    end

    {{#summary}}
    # {{.}}
    {{/summary}}
    {{#notes}}
    # {{.}}
    {{/notes}}
    {{#allParams}}
    {{#required}}
    # @required @param {{paramName}} [{{>partial_model_generic_property_data_type}}]{{#description}} {{{description}}}{{/description}}
    {{/required}}
    {{^required}}
    # @optional @param {{paramName}} [{{>partial_model_generic_property_data_type}}]{{#description}} {{{description}}}{{/description}}
    {{/required}}
    {{/allParams}}
    # @return [Tuple({{>generic_return_property_data_type}}, Integer, Hash)] {{>generic_return_property_data_type}}, response status code and response headers
    def {{operationId}}_with_http_info({{#hasParams}}{{^hasOnlyOneParam}}*, {{/hasOnlyOneParam}}{{/hasParams}}{{#requiredParams}}{{paramName}} : {{>partial_model_generic_property_data_type}} = {{>partial_model_generic_property_default_value}}{{^-last}}, {{/-last}}{{/requiredParams}}{{#hasRequiredParams}}{{#hasOptionalParams}}, {{/hasOptionalParams}}{{/hasRequiredParams}}{{#optionalParams}}{{paramName}} : {{>partial_model_generic_property_data_type}} = {{>partial_model_generic_property_default_value}}{{^-last}}, {{/-last}}{{/optionalParams}}) : Tuple({{>generic_return_property_data_type}}, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_{{operationId}}({{#allParams}}{{paramName}}: {{paramName}}{{^-last}}, {{/-last}}{{/allParams}})

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: {{classname}}#{{operationId}}\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new({{#returnProperty}}{{>generic_return_property_data_type}}.from_json(body){{/returnProperty}}{{^returnProperty}}nil{{/returnProperty}}, status_code, headers)
    end

    {{#summary}}
    # {{.}}
    {{/summary}}
    {{#notes}}
    # {{.}}
    {{/notes}}
    {{#allParams}}
    {{#required}}
    # @required @param {{paramName}} [{{>partial_model_generic_property_data_type}}]{{#description}} {{{description}}}{{/description}}
    {{/required}}
    {{^required}}
    # @optional @param {{paramName}} [{{>partial_model_generic_property_data_type}}]{{#description}} {{{description}}}{{/description}}
    {{/required}}
    {{/allParams}}
    # @return nil
    def {{operationId}}({{#hasParams}}{{^hasOnlyOneParam}}*, {{/hasOnlyOneParam}}{{/hasParams}}{{#requiredParams}}{{paramName}} : {{>partial_model_generic_property_data_type}} = {{>partial_model_generic_property_default_value}}{{^-last}}, {{/-last}}{{/requiredParams}}{{#hasRequiredParams}}{{#hasOptionalParams}}, {{/hasOptionalParams}}{{/hasRequiredParams}}{{#optionalParams}}{{paramName}} : {{>partial_model_generic_property_data_type}} = {{>partial_model_generic_property_default_value}}{{^-last}}, {{/-last}}{{/optionalParams}}{{#hasParams}}, {{/hasParams}}&block : Crest::Response ->) : Nil
      build_api_request_for_{{operationId}}({{#allParams}}{{paramName}}: {{paramName}}{{^-last}}, {{/-last}}{{/allParams}}).execute(&block)
    end

    {{#allParams}}
    {{#maxLength}}
    {{#lambda.uppercase}}{{operationId}}_max_length_for_{{{paramName}}}{{/lambda.uppercase}} = {{{maxLength}}}
    {{/maxLength}}
    {{#minLength}}
    {{#lambda.uppercase}}{{operationId}}_min_length_for_{{{paramName}}}{{/lambda.uppercase}} = {{{minLength}}}
    {{/minLength}}
    {{#maximum}}
    {{#lambda.uppercase}}{{operationId}}_max_for_{{{paramName}}}{{/lambda.uppercase}} = {{{dataType}}}.new("{{{maximum}}}")
    {{/maximum}}
    {{#minimum}}
    {{#lambda.uppercase}}{{operationId}}_min_for_{{{paramName}}}{{/lambda.uppercase}} = {{{dataType}}}.new("{{{minimum}}}")
    {{/minimum}}
    {{#maxItems}}
    {{#lambda.uppercase}}{{operationId}}_max_items_for_{{{paramName}}}{{/lambda.uppercase}} = {{{maxItems}}}
    {{/maxItems}}
    {{#minItems}}
    {{#lambda.uppercase}}{{operationId}}_min_items_for_{{{paramName}}}{{/lambda.uppercase}} = {{{minItems}}}
    {{/minItems}}
    {{#pattern}}
    {{#lambda.uppercase}}{{operationId}}_pattern_for_{{{paramName}}}{{/lambda.uppercase}} = {{{pattern}}}
    {{/pattern}}
    {{#isEnum}}
    {{#lambda.uppercase}}{{operationId}}_valid_values_for_{{{paramName}}}{{/lambda.uppercase}} = {{#allowableValues}}{{#enumVars}}{{#-first}}{{#isContainer}}{{{items.dataType}}}{{/isContainer}}{{^isContainer}}{{{dataType}}}{{/isContainer}}{{/-first}}{{/enumVars}}{{/allowableValues}}.static_array({{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}}, {{/-last}}{{/enumVars}}{{/allowableValues}})
    {{/isEnum}}
    {{/allParams}}
    # @return Crest::Request
    def build_api_request_for_{{operationId}}({{#hasParams}}{{^hasOnlyOneParam}}*, {{/hasOnlyOneParam}}{{/hasParams}}{{#requiredParams}}{{paramName}} : {{>partial_model_generic_property_data_type}} = {{>partial_model_generic_property_default_value}}{{^-last}}, {{/-last}}{{/requiredParams}}{{#hasRequiredParams}}{{#hasOptionalParams}}, {{/hasOptionalParams}}{{/hasRequiredParams}}{{#optionalParams}}{{paramName}} : {{>partial_model_generic_property_data_type}} = {{>partial_model_generic_property_default_value}}{{^-last}}, {{/-last}}{{/optionalParams}}) : Crest::Request
      if debugging
        Log.debug { "Calling API: {{classname}}.{{operationId}} ..." }
      end

      if client_side_validation
      {{#allParams}}
        {{#required}}
        {{^isNullable}}
        raise ArgumentError.new("\"{{{paramName}}}\" is required and cannot be null") if {{{paramName}}}.nil?
        {{/isNullable}}
        {{/required}}
        unless (_{{{paramName}}} = {{{paramName}}}).nil?
          {{#isEnum}}
          OpenApi::EnumValidator.validate("{{{paramName}}}", _{{{paramName}}}, {{#lambda.uppercase}}{{operationId}}_valid_values_for_{{{paramName}}}{{/lambda.uppercase}})
          {{/isEnum}}
          {{^isEnum}}
          {{^allowableValues}}
          {{#isModel}}
          _{{{paramName}}}.validate if _{{{paramName}}}.is_a?(OpenApi::Validatable)
          {{/isModel}}
          {{#isContainer}}
          {{#items.isModel}}
          OpenApi::ContainerValidator.validate(container: _{{{paramName}}}) if _{{{paramName}}}.is_a?({{#isArray}}Array{{/isArray}}{{#isMap}}Hash{{/isMap}})
          {{/items.isModel}}
          {{/isContainer}}
          {{#hasValidation}}
          {{#maxLength}}
          OpenApi::PrimitiveValidator.validate_max_length("{{{paramName}}}", {{^isDate}}{{^isDateTime}}{{{paramName}}}.to_s{{/isDateTime}}{{/isDate}}{{#isDate}}Time::Format::ISO_8601_DATE.format({{{paramName}}}){{/isDate}}{{#isDateTime}}Time::Format::RFC_3339.format({{{paramName}}}){{/isDateTime}}.size, {{#lambda.uppercase}}{{operationId}}_max_length_for_{{{paramName}}}{{/lambda.uppercase}})
          {{/maxLength}}
          {{#minLength}}
          OpenApi::PrimitiveValidator.validate_min_length("{{{paramName}}}", {{^isDate}}{{^isDateTime}}{{{paramName}}}.to_s{{/isDateTime}}{{/isDate}}{{#isDate}}Time::Format::ISO_8601_DATE.format({{{paramName}}}){{/isDate}}{{#isDateTime}}Time::Format::RFC_3339.format({{{paramName}}}){{/isDateTime}}.size, {{#lambda.uppercase}}{{operationId}}_min_length_for_{{{paramName}}}{{/lambda.uppercase}})
          {{/minLength}}
          {{#maximum}}
          OpenApi::PrimitiveValidator.validate_max_number("{{{paramName}}}", _{{{paramName}}}, {{#lambda.uppercase}}{{operationId}}_max_for_{{{paramName}}}{{/lambda.uppercase}}{{#exclusiveMaximum}}, true{{/exclusiveMaximum}})
          {{/maximum}}
          {{#minimum}}
          OpenApi::PrimitiveValidator.validate_min_number("{{{paramName}}}", _{{{paramName}}}, {{#lambda.uppercase}}{{operationId}}_min_for_{{{paramName}}}{{/lambda.uppercase}}{{#exclusiveMinimum}}, true{{/exclusiveMinimum}})
          {{/minimum}}
          {{#maxItems}}
          OpenApi::PrimitiveValidator.validate_max_items("{{{paramName}}}", _{{{paramName}}}.size, {{#lambda.uppercase}}{{operationId}}_max_items_for_{{{paramName}}}{{/lambda.uppercase}})
          {{/maxItems}}
          {{#minItems}}
          OpenApi::PrimitiveValidator.validate_min_items("{{{paramName}}}", _{{{paramName}}}.size, {{#lambda.uppercase}}{{operationId}}_min_items_for_{{{paramName}}}{{/lambda.uppercase}})
          {{/minItems}}
          {{#pattern}}
          OpenApi::PrimitiveValidator.validate_pattern("{{{paramName}}}", _{{{paramName}}}, {{#lambda.uppercase}}{{operationId}}_pattern_for_{{{paramName}}}{{/lambda.uppercase}})
          {{/pattern}}
          {{/hasValidation}}
          {{/allowableValues}}
          {{#allowableValues}}
           _{{{paramName}}}.validate
          {{/allowableValues}}
          {{/isEnum}}
        end
      {{/allParams}}
      end

      # resource path
      local_var_path = "{{{path}}}"{{#pathParams}}.sub("{" + "{{baseName}}" + "}", URI.encode_path({{paramName}}.to_s){{^strictSpecBehavior}}.gsub("%2F", "/"){{/strictSpecBehavior}}){{/pathParams}}

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      {{#queryParams}}
      query_params["{{{baseName}}}"] = {{#collectionFormat}}@api_client.build_collection_param({{{paramName}}}, "{{{collectionFormat}}}"){{/collectionFormat}}{{^collectionFormat}}{{^isDate}}{{^isDateTime}}{{{paramName}}}.to_s{{/isDateTime}}{{/isDate}}{{#isDate}}Time::Format::ISO_8601_DATE.format({{{paramName}}}){{/isDate}}{{#isDateTime}}Time::Format::RFC_3339.format({{{paramName}}}){{/isDateTime}}{{/collectionFormat}} if !{{{paramName}}}.nil?{{#collectionFormat}} && !{{{paramName}}}.empty?{{/collectionFormat}}
      {{/queryParams}}

      # header parameters
      header_params = Hash(String, String).new
      {{#hasProduces}}
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept([{{#produces}}"{{{mediaType}}}"{{^-last}}, {{/-last}}{{/produces}}])
      {{/hasProduces}}
      {{#hasConsumes}}
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type([{{#consumes}}"{{{mediaType}}}"{{^-last}}, {{/-last}}{{/consumes}}])
      {{/hasConsumes}}
      {{#headerParams}}
      header_params["{{{baseName}}}"] = {{#collectionFormat}}@api_client.build_header_param({{{paramName}}}){{/collectionFormat}}{{^collectionFormat}}{{^isDate}}{{^isDateTime}}{{{paramName}}}.to_s{{/isDateTime}}{{/isDate}}{{#isDate}}Time::Format::ISO_8601_DATE.format({{{paramName}}}){{/isDate}}{{#isDateTime}}Time::Format::RFC_3339.format({{{paramName}}}){{/isDateTime}}{{/collectionFormat}} if !{{{paramName}}}.nil?{{#collectionFormat}} && !{{{paramName}}}.empty?{{/collectionFormat}}
      {{/headerParams}}

      # cookie parameters
      cookie_params = Hash(String, String).new
      {{#cookieParams}}
      cookie_params["{{{baseName}}}"] = {{#collectionFormat}}@api_client.build_header_param({{{paramName}}}){{/collectionFormat}}{{^collectionFormat}}{{^isDate}}{{^isDateTime}}{{{paramName}}}.to_s{{/isDateTime}}{{/isDate}}{{#isDate}}Time::Format::ISO_8601_DATE.format({{{paramName}}}){{/isDate}}{{#isDateTime}}Time::Format::RFC_3339.format({{{paramName}}}){{/isDateTime}}{{/collectionFormat}} if !{{{paramName}}}.nil?{{#collectionFormat}} && !{{{paramName}}}.empty?{{/collectionFormat}}
      {{/cookieParams}}

      # form parameters
      {{#hasFormParams}}
      form_params = Hash(String, (String | Array(String) | IO)).new
      {{/hasFormParams}}
      {{^hasFormParams}}
      form_params = nil
      {{/hasFormParams}}
      {{#formParams}}
      {{#isFile}}
      form_params["{{baseName}}"] = {{paramName}} if !{{paramName}}.nil?
      {{/isFile}}
      {{^isFile}}
      form_params["{{baseName}}"] = {{#collectionFormat}}@api_client.build_collection_param({{{paramName}}}, "{{{collectionFormat}}}"){{/collectionFormat}}{{^collectionFormat}}{{^isDate}}{{^isDateTime}}{{{paramName}}}.to_s{{/isDateTime}}{{/isDate}}{{#isDate}}Time::Format::ISO_8601_DATE.format({{{paramName}}}){{/isDate}}{{#isDateTime}}Time::Format::RFC_3339.format({{{paramName}}}){{/isDateTime}}{{/collectionFormat}} if !{{{paramName}}}.nil?{{#collectionFormat}} && !{{{paramName}}}.empty?{{/collectionFormat}}
      {{/isFile}}
      {{/formParams}}

      # http body (model)
      post_body = {{#bodyParam}}{{#isFile}}{{{paramName}}}{{/isFile}}{{^isFile}}{{{paramName}}}.to_json{{/isFile}}{{/bodyParam}}{{^bodyParam}}nil{{/bodyParam}}

      # auth_names
      auth_names = {{#authMethods}}{{#-first}}[{{/-first}}"{{name}}"{{^-last}}, {{/-last}}{{#-last}}]{{/-last}}{{/authMethods}}{{^authMethods}}[] of String{{/authMethods}}

      @api_client.build_api_request(
        http_method: :"{{httpMethod}}",
        path: local_var_path,
        operation: "{{classname}}.{{operationId}}",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end
{{/operation}}
  end
{{/operations}}
end
