{
  "access": {
    "properties": {
      "requested": {
        "type": "boolean"
      }
    },
    "required": [
      "requested"
    ],
    "title": "access",
    "type": "object"
  },
  "access_with_ach_details": {
    "properties": {
      "requested": {
        "type": "boolean"
      }
    },
    "required": [
      "requested"
    ],
    "title": "access_with_ach_details",
    "type": "object"
  },
  "account_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/account"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/accounts",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "AccountList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "accountholder_params": {
    "properties": {
      "account": {
        "maxLength": 5000,
        "type": "string"
      },
      "customer": {
        "maxLength": 5000,
        "type": "string"
      },
      "type": {
        "enum": [
          "account",
          "customer"
        ],
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "title": "accountholder_params",
    "type": "object"
  },
  "add_invoice_item_entry": {
    "properties": {
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "price_data": {
        "$ref": "#/components/schemas/one_time_price_data"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "title": "add_invoice_item_entry",
    "type": "object"
  },
  "address": {
    "properties": {
      "city": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "line1"
    ],
    "title": "address",
    "type": "object"
  },
  "address_specs": {
    "properties": {
      "city": {
        "maxLength": 100,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 200,
        "type": "string"
      },
      "line2": {
        "maxLength": 200,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "address_specs",
    "type": "object"
  },
  "adjustable_quantity_params": {
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "maximum": {
        "type": "integer"
      },
      "minimum": {
        "type": "integer"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "adjustable_quantity_params",
    "type": "object"
  },
  "after_completion_confirmation_page_params": {
    "properties": {
      "custom_message": {
        "maxLength": 500,
        "type": "string"
      }
    },
    "title": "after_completion_confirmation_page_params",
    "type": "object"
  },
  "after_completion_hosted_confirmation_param": {
    "properties": {
      "custom_message": {
        "maxLength": 500,
        "type": "string"
      }
    },
    "title": "after_completion_hosted_confirmation_param",
    "type": "object"
  },
  "after_completion_params": {
    "properties": {
      "hosted_confirmation": {
        "$ref": "#/components/schemas/after_completion_confirmation_page_params"
      },
      "redirect": {
        "$ref": "#/components/schemas/after_completion_redirect_params"
      },
      "type": {
        "enum": [
          "hosted_confirmation",
          "redirect"
        ],
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "title": "after_completion_params",
    "type": "object"
  },
  "after_completion_redirect_param": {
    "properties": {
      "return_url": {
        "type": "string"
      }
    },
    "required": [
      "return_url"
    ],
    "title": "after_completion_redirect_param",
    "type": "object"
  },
  "after_completion_redirect_params": {
    "properties": {
      "url": {
        "maxLength": 2048,
        "type": "string"
      }
    },
    "required": [
      "url"
    ],
    "title": "after_completion_redirect_params",
    "type": "object"
  },
  "after_expiration_params": {
    "properties": {
      "recovery": {
        "$ref": "#/components/schemas/recovery_params"
      }
    },
    "title": "after_expiration_params",
    "type": "object"
  },
  "all_people_relationship_specs": {
    "properties": {
      "director": {
        "type": "boolean"
      },
      "executive": {
        "type": "boolean"
      },
      "owner": {
        "type": "boolean"
      },
      "representative": {
        "type": "boolean"
      }
    },
    "title": "all_people_relationship_specs",
    "type": "object"
  },
  "all_prices_recurring_params": {
    "properties": {
      "interval": {
        "enum": [
          "day",
          "month",
          "week",
          "year"
        ],
        "type": "string"
      },
      "usage_type": {
        "enum": [
          "licensed",
          "metered"
        ],
        "type": "string"
      }
    },
    "title": "all_prices_recurring_params",
    "type": "object"
  },
  "api_method_refund_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/refund"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/refunds",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "APIMethodRefundList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "apms_sources_source_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/payment_source",
          "x-bypass-validation": true
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "ApmsSourcesSourceList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "applies_to_params": {
    "properties": {
      "products": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      }
    },
    "title": "applies_to_params",
    "type": "object"
  },
  "authorization_controls_param": {
    "properties": {
      "allowed_categories": {
        "items": {
          "enum": [
            "ac_refrigeration_repair",
            "accounting_bookkeeping_services",
            "advertising_services",
            "agricultural_cooperative",
            "airlines_air_carriers",
            "airports_flying_fields",
            "ambulance_services",
            "amusement_parks_carnivals",
            "antique_reproductions",
            "antique_shops",
            "aquariums",
            "architectural_surveying_services",
            "art_dealers_and_galleries",
            "artists_supply_and_craft_shops",
            "auto_and_home_supply_stores",
            "auto_body_repair_shops",
            "auto_paint_shops",
            "auto_service_shops",
            "automated_cash_disburse",
            "automated_fuel_dispensers",
            "automobile_associations",
            "automotive_parts_and_accessories_stores",
            "automotive_tire_stores",
            "bail_and_bond_payments",
            "bakeries",
            "bands_orchestras",
            "barber_and_beauty_shops",
            "betting_casino_gambling",
            "bicycle_shops",
            "billiard_pool_establishments",
            "boat_dealers",
            "boat_rentals_and_leases",
            "book_stores",
            "books_periodicals_and_newspapers",
            "bowling_alleys",
            "bus_lines",
            "business_secretarial_schools",
            "buying_shopping_services",
            "cable_satellite_and_other_pay_television_and_radio",
            "camera_and_photographic_supply_stores",
            "candy_nut_and_confectionery_stores",
            "car_and_truck_dealers_new_used",
            "car_and_truck_dealers_used_only",
            "car_rental_agencies",
            "car_washes",
            "carpentry_services",
            "carpet_upholstery_cleaning",
            "caterers",
            "charitable_and_social_service_organizations_fundraising",
            "chemicals_and_allied_products",
            "child_care_services",
            "childrens_and_infants_wear_stores",
            "chiropodists_podiatrists",
            "chiropractors",
            "cigar_stores_and_stands",
            "civic_social_fraternal_associations",
            "cleaning_and_maintenance",
            "clothing_rental",
            "colleges_universities",
            "commercial_equipment",
            "commercial_footwear",
            "commercial_photography_art_and_graphics",
            "commuter_transport_and_ferries",
            "computer_network_services",
            "computer_programming",
            "computer_repair",
            "computer_software_stores",
            "computers_peripherals_and_software",
            "concrete_work_services",
            "construction_materials",
            "consulting_public_relations",
            "correspondence_schools",
            "cosmetic_stores",
            "counseling_services",
            "country_clubs",
            "courier_services",
            "court_costs",
            "credit_reporting_agencies",
            "cruise_lines",
            "dairy_products_stores",
            "dance_hall_studios_schools",
            "dating_escort_services",
            "dentists_orthodontists",
            "department_stores",
            "detective_agencies",
            "digital_goods_applications",
            "digital_goods_games",
            "digital_goods_large_volume",
            "digital_goods_media",
            "direct_marketing_catalog_merchant",
            "direct_marketing_combination_catalog_and_retail_merchant",
            "direct_marketing_inbound_telemarketing",
            "direct_marketing_insurance_services",
            "direct_marketing_other",
            "direct_marketing_outbound_telemarketing",
            "direct_marketing_subscription",
            "direct_marketing_travel",
            "discount_stores",
            "doctors",
            "door_to_door_sales",
            "drapery_window_covering_and_upholstery_stores",
            "drinking_places",
            "drug_stores_and_pharmacies",
            "drugs_drug_proprietaries_and_druggist_sundries",
            "dry_cleaners",
            "durable_goods",
            "duty_free_stores",
            "eating_places_restaurants",
            "educational_services",
            "electric_razor_stores",
            "electrical_parts_and_equipment",
            "electrical_services",
            "electronics_repair_shops",
            "electronics_stores",
            "elementary_secondary_schools",
            "employment_temp_agencies",
            "equipment_rental",
            "exterminating_services",
            "family_clothing_stores",
            "fast_food_restaurants",
            "financial_institutions",
            "fines_government_administrative_entities",
            "fireplace_fireplace_screens_and_accessories_stores",
            "floor_covering_stores",
            "florists",
            "florists_supplies_nursery_stock_and_flowers",
            "freezer_and_locker_meat_provisioners",
            "fuel_dealers_non_automotive",
            "funeral_services_crematories",
            "furniture_home_furnishings_and_equipment_stores_except_appliances",
            "furniture_repair_refinishing",
            "furriers_and_fur_shops",
            "general_services",
            "gift_card_novelty_and_souvenir_shops",
            "glass_paint_and_wallpaper_stores",
            "glassware_crystal_stores",
            "golf_courses_public",
            "government_services",
            "grocery_stores_supermarkets",
            "hardware_equipment_and_supplies",
            "hardware_stores",
            "health_and_beauty_spas",
            "hearing_aids_sales_and_supplies",
            "heating_plumbing_a_c",
            "hobby_toy_and_game_shops",
            "home_supply_warehouse_stores",
            "hospitals",
            "hotels_motels_and_resorts",
            "household_appliance_stores",
            "industrial_supplies",
            "information_retrieval_services",
            "insurance_default",
            "insurance_underwriting_premiums",
            "intra_company_purchases",
            "jewelry_stores_watches_clocks_and_silverware_stores",
            "landscaping_services",
            "laundries",
            "laundry_cleaning_services",
            "legal_services_attorneys",
            "luggage_and_leather_goods_stores",
            "lumber_building_materials_stores",
            "manual_cash_disburse",
            "marinas_service_and_supplies",
            "masonry_stonework_and_plaster",
            "massage_parlors",
            "medical_and_dental_labs",
            "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
            "medical_services",
            "membership_organizations",
            "mens_and_boys_clothing_and_accessories_stores",
            "mens_womens_clothing_stores",
            "metal_service_centers",
            "miscellaneous",
            "miscellaneous_apparel_and_accessory_shops",
            "miscellaneous_auto_dealers",
            "miscellaneous_business_services",
            "miscellaneous_food_stores",
            "miscellaneous_general_merchandise",
            "miscellaneous_general_services",
            "miscellaneous_home_furnishing_specialty_stores",
            "miscellaneous_publishing_and_printing",
            "miscellaneous_recreation_services",
            "miscellaneous_repair_shops",
            "miscellaneous_specialty_retail",
            "mobile_home_dealers",
            "motion_picture_theaters",
            "motor_freight_carriers_and_trucking",
            "motor_homes_dealers",
            "motor_vehicle_supplies_and_new_parts",
            "motorcycle_shops_and_dealers",
            "motorcycle_shops_dealers",
            "music_stores_musical_instruments_pianos_and_sheet_music",
            "news_dealers_and_newsstands",
            "non_fi_money_orders",
            "non_fi_stored_value_card_purchase_load",
            "nondurable_goods",
            "nurseries_lawn_and_garden_supply_stores",
            "nursing_personal_care",
            "office_and_commercial_furniture",
            "opticians_eyeglasses",
            "optometrists_ophthalmologist",
            "orthopedic_goods_prosthetic_devices",
            "osteopaths",
            "package_stores_beer_wine_and_liquor",
            "paints_varnishes_and_supplies",
            "parking_lots_garages",
            "passenger_railways",
            "pawn_shops",
            "pet_shops_pet_food_and_supplies",
            "petroleum_and_petroleum_products",
            "photo_developing",
            "photographic_photocopy_microfilm_equipment_and_supplies",
            "photographic_studios",
            "picture_video_production",
            "piece_goods_notions_and_other_dry_goods",
            "plumbing_heating_equipment_and_supplies",
            "political_organizations",
            "postal_services_government_only",
            "precious_stones_and_metals_watches_and_jewelry",
            "professional_services",
            "public_warehousing_and_storage",
            "quick_copy_repro_and_blueprint",
            "railroads",
            "real_estate_agents_and_managers_rentals",
            "record_stores",
            "recreational_vehicle_rentals",
            "religious_goods_stores",
            "religious_organizations",
            "roofing_siding_sheet_metal",
            "secretarial_support_services",
            "security_brokers_dealers",
            "service_stations",
            "sewing_needlework_fabric_and_piece_goods_stores",
            "shoe_repair_hat_cleaning",
            "shoe_stores",
            "small_appliance_repair",
            "snowmobile_dealers",
            "special_trade_services",
            "specialty_cleaning",
            "sporting_goods_stores",
            "sporting_recreation_camps",
            "sports_and_riding_apparel_stores",
            "sports_clubs_fields",
            "stamp_and_coin_stores",
            "stationary_office_supplies_printing_and_writing_paper",
            "stationery_stores_office_and_school_supply_stores",
            "swimming_pools_sales",
            "t_ui_travel_germany",
            "tailors_alterations",
            "tax_payments_government_agencies",
            "tax_preparation_services",
            "taxicabs_limousines",
            "telecommunication_equipment_and_telephone_sales",
            "telecommunication_services",
            "telegraph_services",
            "tent_and_awning_shops",
            "testing_laboratories",
            "theatrical_ticket_agencies",
            "timeshares",
            "tire_retreading_and_repair",
            "tolls_bridge_fees",
            "tourist_attractions_and_exhibits",
            "towing_services",
            "trailer_parks_campgrounds",
            "transportation_services",
            "travel_agencies_tour_operators",
            "truck_stop_iteration",
            "truck_utility_trailer_rentals",
            "typesetting_plate_making_and_related_services",
            "typewriter_stores",
            "u_s_federal_government_agencies_or_departments",
            "uniforms_commercial_clothing",
            "used_merchandise_and_secondhand_stores",
            "utilities",
            "variety_stores",
            "veterinary_services",
            "video_amusement_game_supplies",
            "video_game_arcades",
            "video_tape_rental_stores",
            "vocational_trade_schools",
            "watch_jewelry_repair",
            "welding_repair",
            "wholesale_clubs",
            "wig_and_toupee_stores",
            "wires_money_orders",
            "womens_accessory_and_specialty_shops",
            "womens_ready_to_wear_stores",
            "wrecking_and_salvage_yards"
          ],
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "blocked_categories": {
        "items": {
          "enum": [
            "ac_refrigeration_repair",
            "accounting_bookkeeping_services",
            "advertising_services",
            "agricultural_cooperative",
            "airlines_air_carriers",
            "airports_flying_fields",
            "ambulance_services",
            "amusement_parks_carnivals",
            "antique_reproductions",
            "antique_shops",
            "aquariums",
            "architectural_surveying_services",
            "art_dealers_and_galleries",
            "artists_supply_and_craft_shops",
            "auto_and_home_supply_stores",
            "auto_body_repair_shops",
            "auto_paint_shops",
            "auto_service_shops",
            "automated_cash_disburse",
            "automated_fuel_dispensers",
            "automobile_associations",
            "automotive_parts_and_accessories_stores",
            "automotive_tire_stores",
            "bail_and_bond_payments",
            "bakeries",
            "bands_orchestras",
            "barber_and_beauty_shops",
            "betting_casino_gambling",
            "bicycle_shops",
            "billiard_pool_establishments",
            "boat_dealers",
            "boat_rentals_and_leases",
            "book_stores",
            "books_periodicals_and_newspapers",
            "bowling_alleys",
            "bus_lines",
            "business_secretarial_schools",
            "buying_shopping_services",
            "cable_satellite_and_other_pay_television_and_radio",
            "camera_and_photographic_supply_stores",
            "candy_nut_and_confectionery_stores",
            "car_and_truck_dealers_new_used",
            "car_and_truck_dealers_used_only",
            "car_rental_agencies",
            "car_washes",
            "carpentry_services",
            "carpet_upholstery_cleaning",
            "caterers",
            "charitable_and_social_service_organizations_fundraising",
            "chemicals_and_allied_products",
            "child_care_services",
            "childrens_and_infants_wear_stores",
            "chiropodists_podiatrists",
            "chiropractors",
            "cigar_stores_and_stands",
            "civic_social_fraternal_associations",
            "cleaning_and_maintenance",
            "clothing_rental",
            "colleges_universities",
            "commercial_equipment",
            "commercial_footwear",
            "commercial_photography_art_and_graphics",
            "commuter_transport_and_ferries",
            "computer_network_services",
            "computer_programming",
            "computer_repair",
            "computer_software_stores",
            "computers_peripherals_and_software",
            "concrete_work_services",
            "construction_materials",
            "consulting_public_relations",
            "correspondence_schools",
            "cosmetic_stores",
            "counseling_services",
            "country_clubs",
            "courier_services",
            "court_costs",
            "credit_reporting_agencies",
            "cruise_lines",
            "dairy_products_stores",
            "dance_hall_studios_schools",
            "dating_escort_services",
            "dentists_orthodontists",
            "department_stores",
            "detective_agencies",
            "digital_goods_applications",
            "digital_goods_games",
            "digital_goods_large_volume",
            "digital_goods_media",
            "direct_marketing_catalog_merchant",
            "direct_marketing_combination_catalog_and_retail_merchant",
            "direct_marketing_inbound_telemarketing",
            "direct_marketing_insurance_services",
            "direct_marketing_other",
            "direct_marketing_outbound_telemarketing",
            "direct_marketing_subscription",
            "direct_marketing_travel",
            "discount_stores",
            "doctors",
            "door_to_door_sales",
            "drapery_window_covering_and_upholstery_stores",
            "drinking_places",
            "drug_stores_and_pharmacies",
            "drugs_drug_proprietaries_and_druggist_sundries",
            "dry_cleaners",
            "durable_goods",
            "duty_free_stores",
            "eating_places_restaurants",
            "educational_services",
            "electric_razor_stores",
            "electrical_parts_and_equipment",
            "electrical_services",
            "electronics_repair_shops",
            "electronics_stores",
            "elementary_secondary_schools",
            "employment_temp_agencies",
            "equipment_rental",
            "exterminating_services",
            "family_clothing_stores",
            "fast_food_restaurants",
            "financial_institutions",
            "fines_government_administrative_entities",
            "fireplace_fireplace_screens_and_accessories_stores",
            "floor_covering_stores",
            "florists",
            "florists_supplies_nursery_stock_and_flowers",
            "freezer_and_locker_meat_provisioners",
            "fuel_dealers_non_automotive",
            "funeral_services_crematories",
            "furniture_home_furnishings_and_equipment_stores_except_appliances",
            "furniture_repair_refinishing",
            "furriers_and_fur_shops",
            "general_services",
            "gift_card_novelty_and_souvenir_shops",
            "glass_paint_and_wallpaper_stores",
            "glassware_crystal_stores",
            "golf_courses_public",
            "government_services",
            "grocery_stores_supermarkets",
            "hardware_equipment_and_supplies",
            "hardware_stores",
            "health_and_beauty_spas",
            "hearing_aids_sales_and_supplies",
            "heating_plumbing_a_c",
            "hobby_toy_and_game_shops",
            "home_supply_warehouse_stores",
            "hospitals",
            "hotels_motels_and_resorts",
            "household_appliance_stores",
            "industrial_supplies",
            "information_retrieval_services",
            "insurance_default",
            "insurance_underwriting_premiums",
            "intra_company_purchases",
            "jewelry_stores_watches_clocks_and_silverware_stores",
            "landscaping_services",
            "laundries",
            "laundry_cleaning_services",
            "legal_services_attorneys",
            "luggage_and_leather_goods_stores",
            "lumber_building_materials_stores",
            "manual_cash_disburse",
            "marinas_service_and_supplies",
            "masonry_stonework_and_plaster",
            "massage_parlors",
            "medical_and_dental_labs",
            "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
            "medical_services",
            "membership_organizations",
            "mens_and_boys_clothing_and_accessories_stores",
            "mens_womens_clothing_stores",
            "metal_service_centers",
            "miscellaneous",
            "miscellaneous_apparel_and_accessory_shops",
            "miscellaneous_auto_dealers",
            "miscellaneous_business_services",
            "miscellaneous_food_stores",
            "miscellaneous_general_merchandise",
            "miscellaneous_general_services",
            "miscellaneous_home_furnishing_specialty_stores",
            "miscellaneous_publishing_and_printing",
            "miscellaneous_recreation_services",
            "miscellaneous_repair_shops",
            "miscellaneous_specialty_retail",
            "mobile_home_dealers",
            "motion_picture_theaters",
            "motor_freight_carriers_and_trucking",
            "motor_homes_dealers",
            "motor_vehicle_supplies_and_new_parts",
            "motorcycle_shops_and_dealers",
            "motorcycle_shops_dealers",
            "music_stores_musical_instruments_pianos_and_sheet_music",
            "news_dealers_and_newsstands",
            "non_fi_money_orders",
            "non_fi_stored_value_card_purchase_load",
            "nondurable_goods",
            "nurseries_lawn_and_garden_supply_stores",
            "nursing_personal_care",
            "office_and_commercial_furniture",
            "opticians_eyeglasses",
            "optometrists_ophthalmologist",
            "orthopedic_goods_prosthetic_devices",
            "osteopaths",
            "package_stores_beer_wine_and_liquor",
            "paints_varnishes_and_supplies",
            "parking_lots_garages",
            "passenger_railways",
            "pawn_shops",
            "pet_shops_pet_food_and_supplies",
            "petroleum_and_petroleum_products",
            "photo_developing",
            "photographic_photocopy_microfilm_equipment_and_supplies",
            "photographic_studios",
            "picture_video_production",
            "piece_goods_notions_and_other_dry_goods",
            "plumbing_heating_equipment_and_supplies",
            "political_organizations",
            "postal_services_government_only",
            "precious_stones_and_metals_watches_and_jewelry",
            "professional_services",
            "public_warehousing_and_storage",
            "quick_copy_repro_and_blueprint",
            "railroads",
            "real_estate_agents_and_managers_rentals",
            "record_stores",
            "recreational_vehicle_rentals",
            "religious_goods_stores",
            "religious_organizations",
            "roofing_siding_sheet_metal",
            "secretarial_support_services",
            "security_brokers_dealers",
            "service_stations",
            "sewing_needlework_fabric_and_piece_goods_stores",
            "shoe_repair_hat_cleaning",
            "shoe_stores",
            "small_appliance_repair",
            "snowmobile_dealers",
            "special_trade_services",
            "specialty_cleaning",
            "sporting_goods_stores",
            "sporting_recreation_camps",
            "sports_and_riding_apparel_stores",
            "sports_clubs_fields",
            "stamp_and_coin_stores",
            "stationary_office_supplies_printing_and_writing_paper",
            "stationery_stores_office_and_school_supply_stores",
            "swimming_pools_sales",
            "t_ui_travel_germany",
            "tailors_alterations",
            "tax_payments_government_agencies",
            "tax_preparation_services",
            "taxicabs_limousines",
            "telecommunication_equipment_and_telephone_sales",
            "telecommunication_services",
            "telegraph_services",
            "tent_and_awning_shops",
            "testing_laboratories",
            "theatrical_ticket_agencies",
            "timeshares",
            "tire_retreading_and_repair",
            "tolls_bridge_fees",
            "tourist_attractions_and_exhibits",
            "towing_services",
            "trailer_parks_campgrounds",
            "transportation_services",
            "travel_agencies_tour_operators",
            "truck_stop_iteration",
            "truck_utility_trailer_rentals",
            "typesetting_plate_making_and_related_services",
            "typewriter_stores",
            "u_s_federal_government_agencies_or_departments",
            "uniforms_commercial_clothing",
            "used_merchandise_and_secondhand_stores",
            "utilities",
            "variety_stores",
            "veterinary_services",
            "video_amusement_game_supplies",
            "video_game_arcades",
            "video_tape_rental_stores",
            "vocational_trade_schools",
            "watch_jewelry_repair",
            "welding_repair",
            "wholesale_clubs",
            "wig_and_toupee_stores",
            "wires_money_orders",
            "womens_accessory_and_specialty_shops",
            "womens_ready_to_wear_stores",
            "wrecking_and_salvage_yards"
          ],
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "spending_limits": {
        "items": {
          "$ref": "#/components/schemas/spending_limits_param"
        },
        "type": "array"
      }
    },
    "title": "authorization_controls_param",
    "type": "object"
  },
  "authorization_controls_param_v2": {
    "properties": {
      "allowed_categories": {
        "items": {
          "enum": [
            "ac_refrigeration_repair",
            "accounting_bookkeeping_services",
            "advertising_services",
            "agricultural_cooperative",
            "airlines_air_carriers",
            "airports_flying_fields",
            "ambulance_services",
            "amusement_parks_carnivals",
            "antique_reproductions",
            "antique_shops",
            "aquariums",
            "architectural_surveying_services",
            "art_dealers_and_galleries",
            "artists_supply_and_craft_shops",
            "auto_and_home_supply_stores",
            "auto_body_repair_shops",
            "auto_paint_shops",
            "auto_service_shops",
            "automated_cash_disburse",
            "automated_fuel_dispensers",
            "automobile_associations",
            "automotive_parts_and_accessories_stores",
            "automotive_tire_stores",
            "bail_and_bond_payments",
            "bakeries",
            "bands_orchestras",
            "barber_and_beauty_shops",
            "betting_casino_gambling",
            "bicycle_shops",
            "billiard_pool_establishments",
            "boat_dealers",
            "boat_rentals_and_leases",
            "book_stores",
            "books_periodicals_and_newspapers",
            "bowling_alleys",
            "bus_lines",
            "business_secretarial_schools",
            "buying_shopping_services",
            "cable_satellite_and_other_pay_television_and_radio",
            "camera_and_photographic_supply_stores",
            "candy_nut_and_confectionery_stores",
            "car_and_truck_dealers_new_used",
            "car_and_truck_dealers_used_only",
            "car_rental_agencies",
            "car_washes",
            "carpentry_services",
            "carpet_upholstery_cleaning",
            "caterers",
            "charitable_and_social_service_organizations_fundraising",
            "chemicals_and_allied_products",
            "child_care_services",
            "childrens_and_infants_wear_stores",
            "chiropodists_podiatrists",
            "chiropractors",
            "cigar_stores_and_stands",
            "civic_social_fraternal_associations",
            "cleaning_and_maintenance",
            "clothing_rental",
            "colleges_universities",
            "commercial_equipment",
            "commercial_footwear",
            "commercial_photography_art_and_graphics",
            "commuter_transport_and_ferries",
            "computer_network_services",
            "computer_programming",
            "computer_repair",
            "computer_software_stores",
            "computers_peripherals_and_software",
            "concrete_work_services",
            "construction_materials",
            "consulting_public_relations",
            "correspondence_schools",
            "cosmetic_stores",
            "counseling_services",
            "country_clubs",
            "courier_services",
            "court_costs",
            "credit_reporting_agencies",
            "cruise_lines",
            "dairy_products_stores",
            "dance_hall_studios_schools",
            "dating_escort_services",
            "dentists_orthodontists",
            "department_stores",
            "detective_agencies",
            "digital_goods_applications",
            "digital_goods_games",
            "digital_goods_large_volume",
            "digital_goods_media",
            "direct_marketing_catalog_merchant",
            "direct_marketing_combination_catalog_and_retail_merchant",
            "direct_marketing_inbound_telemarketing",
            "direct_marketing_insurance_services",
            "direct_marketing_other",
            "direct_marketing_outbound_telemarketing",
            "direct_marketing_subscription",
            "direct_marketing_travel",
            "discount_stores",
            "doctors",
            "door_to_door_sales",
            "drapery_window_covering_and_upholstery_stores",
            "drinking_places",
            "drug_stores_and_pharmacies",
            "drugs_drug_proprietaries_and_druggist_sundries",
            "dry_cleaners",
            "durable_goods",
            "duty_free_stores",
            "eating_places_restaurants",
            "educational_services",
            "electric_razor_stores",
            "electrical_parts_and_equipment",
            "electrical_services",
            "electronics_repair_shops",
            "electronics_stores",
            "elementary_secondary_schools",
            "employment_temp_agencies",
            "equipment_rental",
            "exterminating_services",
            "family_clothing_stores",
            "fast_food_restaurants",
            "financial_institutions",
            "fines_government_administrative_entities",
            "fireplace_fireplace_screens_and_accessories_stores",
            "floor_covering_stores",
            "florists",
            "florists_supplies_nursery_stock_and_flowers",
            "freezer_and_locker_meat_provisioners",
            "fuel_dealers_non_automotive",
            "funeral_services_crematories",
            "furniture_home_furnishings_and_equipment_stores_except_appliances",
            "furniture_repair_refinishing",
            "furriers_and_fur_shops",
            "general_services",
            "gift_card_novelty_and_souvenir_shops",
            "glass_paint_and_wallpaper_stores",
            "glassware_crystal_stores",
            "golf_courses_public",
            "government_services",
            "grocery_stores_supermarkets",
            "hardware_equipment_and_supplies",
            "hardware_stores",
            "health_and_beauty_spas",
            "hearing_aids_sales_and_supplies",
            "heating_plumbing_a_c",
            "hobby_toy_and_game_shops",
            "home_supply_warehouse_stores",
            "hospitals",
            "hotels_motels_and_resorts",
            "household_appliance_stores",
            "industrial_supplies",
            "information_retrieval_services",
            "insurance_default",
            "insurance_underwriting_premiums",
            "intra_company_purchases",
            "jewelry_stores_watches_clocks_and_silverware_stores",
            "landscaping_services",
            "laundries",
            "laundry_cleaning_services",
            "legal_services_attorneys",
            "luggage_and_leather_goods_stores",
            "lumber_building_materials_stores",
            "manual_cash_disburse",
            "marinas_service_and_supplies",
            "masonry_stonework_and_plaster",
            "massage_parlors",
            "medical_and_dental_labs",
            "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
            "medical_services",
            "membership_organizations",
            "mens_and_boys_clothing_and_accessories_stores",
            "mens_womens_clothing_stores",
            "metal_service_centers",
            "miscellaneous",
            "miscellaneous_apparel_and_accessory_shops",
            "miscellaneous_auto_dealers",
            "miscellaneous_business_services",
            "miscellaneous_food_stores",
            "miscellaneous_general_merchandise",
            "miscellaneous_general_services",
            "miscellaneous_home_furnishing_specialty_stores",
            "miscellaneous_publishing_and_printing",
            "miscellaneous_recreation_services",
            "miscellaneous_repair_shops",
            "miscellaneous_specialty_retail",
            "mobile_home_dealers",
            "motion_picture_theaters",
            "motor_freight_carriers_and_trucking",
            "motor_homes_dealers",
            "motor_vehicle_supplies_and_new_parts",
            "motorcycle_shops_and_dealers",
            "motorcycle_shops_dealers",
            "music_stores_musical_instruments_pianos_and_sheet_music",
            "news_dealers_and_newsstands",
            "non_fi_money_orders",
            "non_fi_stored_value_card_purchase_load",
            "nondurable_goods",
            "nurseries_lawn_and_garden_supply_stores",
            "nursing_personal_care",
            "office_and_commercial_furniture",
            "opticians_eyeglasses",
            "optometrists_ophthalmologist",
            "orthopedic_goods_prosthetic_devices",
            "osteopaths",
            "package_stores_beer_wine_and_liquor",
            "paints_varnishes_and_supplies",
            "parking_lots_garages",
            "passenger_railways",
            "pawn_shops",
            "pet_shops_pet_food_and_supplies",
            "petroleum_and_petroleum_products",
            "photo_developing",
            "photographic_photocopy_microfilm_equipment_and_supplies",
            "photographic_studios",
            "picture_video_production",
            "piece_goods_notions_and_other_dry_goods",
            "plumbing_heating_equipment_and_supplies",
            "political_organizations",
            "postal_services_government_only",
            "precious_stones_and_metals_watches_and_jewelry",
            "professional_services",
            "public_warehousing_and_storage",
            "quick_copy_repro_and_blueprint",
            "railroads",
            "real_estate_agents_and_managers_rentals",
            "record_stores",
            "recreational_vehicle_rentals",
            "religious_goods_stores",
            "religious_organizations",
            "roofing_siding_sheet_metal",
            "secretarial_support_services",
            "security_brokers_dealers",
            "service_stations",
            "sewing_needlework_fabric_and_piece_goods_stores",
            "shoe_repair_hat_cleaning",
            "shoe_stores",
            "small_appliance_repair",
            "snowmobile_dealers",
            "special_trade_services",
            "specialty_cleaning",
            "sporting_goods_stores",
            "sporting_recreation_camps",
            "sports_and_riding_apparel_stores",
            "sports_clubs_fields",
            "stamp_and_coin_stores",
            "stationary_office_supplies_printing_and_writing_paper",
            "stationery_stores_office_and_school_supply_stores",
            "swimming_pools_sales",
            "t_ui_travel_germany",
            "tailors_alterations",
            "tax_payments_government_agencies",
            "tax_preparation_services",
            "taxicabs_limousines",
            "telecommunication_equipment_and_telephone_sales",
            "telecommunication_services",
            "telegraph_services",
            "tent_and_awning_shops",
            "testing_laboratories",
            "theatrical_ticket_agencies",
            "timeshares",
            "tire_retreading_and_repair",
            "tolls_bridge_fees",
            "tourist_attractions_and_exhibits",
            "towing_services",
            "trailer_parks_campgrounds",
            "transportation_services",
            "travel_agencies_tour_operators",
            "truck_stop_iteration",
            "truck_utility_trailer_rentals",
            "typesetting_plate_making_and_related_services",
            "typewriter_stores",
            "u_s_federal_government_agencies_or_departments",
            "uniforms_commercial_clothing",
            "used_merchandise_and_secondhand_stores",
            "utilities",
            "variety_stores",
            "veterinary_services",
            "video_amusement_game_supplies",
            "video_game_arcades",
            "video_tape_rental_stores",
            "vocational_trade_schools",
            "watch_jewelry_repair",
            "welding_repair",
            "wholesale_clubs",
            "wig_and_toupee_stores",
            "wires_money_orders",
            "womens_accessory_and_specialty_shops",
            "womens_ready_to_wear_stores",
            "wrecking_and_salvage_yards"
          ],
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "blocked_categories": {
        "items": {
          "enum": [
            "ac_refrigeration_repair",
            "accounting_bookkeeping_services",
            "advertising_services",
            "agricultural_cooperative",
            "airlines_air_carriers",
            "airports_flying_fields",
            "ambulance_services",
            "amusement_parks_carnivals",
            "antique_reproductions",
            "antique_shops",
            "aquariums",
            "architectural_surveying_services",
            "art_dealers_and_galleries",
            "artists_supply_and_craft_shops",
            "auto_and_home_supply_stores",
            "auto_body_repair_shops",
            "auto_paint_shops",
            "auto_service_shops",
            "automated_cash_disburse",
            "automated_fuel_dispensers",
            "automobile_associations",
            "automotive_parts_and_accessories_stores",
            "automotive_tire_stores",
            "bail_and_bond_payments",
            "bakeries",
            "bands_orchestras",
            "barber_and_beauty_shops",
            "betting_casino_gambling",
            "bicycle_shops",
            "billiard_pool_establishments",
            "boat_dealers",
            "boat_rentals_and_leases",
            "book_stores",
            "books_periodicals_and_newspapers",
            "bowling_alleys",
            "bus_lines",
            "business_secretarial_schools",
            "buying_shopping_services",
            "cable_satellite_and_other_pay_television_and_radio",
            "camera_and_photographic_supply_stores",
            "candy_nut_and_confectionery_stores",
            "car_and_truck_dealers_new_used",
            "car_and_truck_dealers_used_only",
            "car_rental_agencies",
            "car_washes",
            "carpentry_services",
            "carpet_upholstery_cleaning",
            "caterers",
            "charitable_and_social_service_organizations_fundraising",
            "chemicals_and_allied_products",
            "child_care_services",
            "childrens_and_infants_wear_stores",
            "chiropodists_podiatrists",
            "chiropractors",
            "cigar_stores_and_stands",
            "civic_social_fraternal_associations",
            "cleaning_and_maintenance",
            "clothing_rental",
            "colleges_universities",
            "commercial_equipment",
            "commercial_footwear",
            "commercial_photography_art_and_graphics",
            "commuter_transport_and_ferries",
            "computer_network_services",
            "computer_programming",
            "computer_repair",
            "computer_software_stores",
            "computers_peripherals_and_software",
            "concrete_work_services",
            "construction_materials",
            "consulting_public_relations",
            "correspondence_schools",
            "cosmetic_stores",
            "counseling_services",
            "country_clubs",
            "courier_services",
            "court_costs",
            "credit_reporting_agencies",
            "cruise_lines",
            "dairy_products_stores",
            "dance_hall_studios_schools",
            "dating_escort_services",
            "dentists_orthodontists",
            "department_stores",
            "detective_agencies",
            "digital_goods_applications",
            "digital_goods_games",
            "digital_goods_large_volume",
            "digital_goods_media",
            "direct_marketing_catalog_merchant",
            "direct_marketing_combination_catalog_and_retail_merchant",
            "direct_marketing_inbound_telemarketing",
            "direct_marketing_insurance_services",
            "direct_marketing_other",
            "direct_marketing_outbound_telemarketing",
            "direct_marketing_subscription",
            "direct_marketing_travel",
            "discount_stores",
            "doctors",
            "door_to_door_sales",
            "drapery_window_covering_and_upholstery_stores",
            "drinking_places",
            "drug_stores_and_pharmacies",
            "drugs_drug_proprietaries_and_druggist_sundries",
            "dry_cleaners",
            "durable_goods",
            "duty_free_stores",
            "eating_places_restaurants",
            "educational_services",
            "electric_razor_stores",
            "electrical_parts_and_equipment",
            "electrical_services",
            "electronics_repair_shops",
            "electronics_stores",
            "elementary_secondary_schools",
            "employment_temp_agencies",
            "equipment_rental",
            "exterminating_services",
            "family_clothing_stores",
            "fast_food_restaurants",
            "financial_institutions",
            "fines_government_administrative_entities",
            "fireplace_fireplace_screens_and_accessories_stores",
            "floor_covering_stores",
            "florists",
            "florists_supplies_nursery_stock_and_flowers",
            "freezer_and_locker_meat_provisioners",
            "fuel_dealers_non_automotive",
            "funeral_services_crematories",
            "furniture_home_furnishings_and_equipment_stores_except_appliances",
            "furniture_repair_refinishing",
            "furriers_and_fur_shops",
            "general_services",
            "gift_card_novelty_and_souvenir_shops",
            "glass_paint_and_wallpaper_stores",
            "glassware_crystal_stores",
            "golf_courses_public",
            "government_services",
            "grocery_stores_supermarkets",
            "hardware_equipment_and_supplies",
            "hardware_stores",
            "health_and_beauty_spas",
            "hearing_aids_sales_and_supplies",
            "heating_plumbing_a_c",
            "hobby_toy_and_game_shops",
            "home_supply_warehouse_stores",
            "hospitals",
            "hotels_motels_and_resorts",
            "household_appliance_stores",
            "industrial_supplies",
            "information_retrieval_services",
            "insurance_default",
            "insurance_underwriting_premiums",
            "intra_company_purchases",
            "jewelry_stores_watches_clocks_and_silverware_stores",
            "landscaping_services",
            "laundries",
            "laundry_cleaning_services",
            "legal_services_attorneys",
            "luggage_and_leather_goods_stores",
            "lumber_building_materials_stores",
            "manual_cash_disburse",
            "marinas_service_and_supplies",
            "masonry_stonework_and_plaster",
            "massage_parlors",
            "medical_and_dental_labs",
            "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
            "medical_services",
            "membership_organizations",
            "mens_and_boys_clothing_and_accessories_stores",
            "mens_womens_clothing_stores",
            "metal_service_centers",
            "miscellaneous",
            "miscellaneous_apparel_and_accessory_shops",
            "miscellaneous_auto_dealers",
            "miscellaneous_business_services",
            "miscellaneous_food_stores",
            "miscellaneous_general_merchandise",
            "miscellaneous_general_services",
            "miscellaneous_home_furnishing_specialty_stores",
            "miscellaneous_publishing_and_printing",
            "miscellaneous_recreation_services",
            "miscellaneous_repair_shops",
            "miscellaneous_specialty_retail",
            "mobile_home_dealers",
            "motion_picture_theaters",
            "motor_freight_carriers_and_trucking",
            "motor_homes_dealers",
            "motor_vehicle_supplies_and_new_parts",
            "motorcycle_shops_and_dealers",
            "motorcycle_shops_dealers",
            "music_stores_musical_instruments_pianos_and_sheet_music",
            "news_dealers_and_newsstands",
            "non_fi_money_orders",
            "non_fi_stored_value_card_purchase_load",
            "nondurable_goods",
            "nurseries_lawn_and_garden_supply_stores",
            "nursing_personal_care",
            "office_and_commercial_furniture",
            "opticians_eyeglasses",
            "optometrists_ophthalmologist",
            "orthopedic_goods_prosthetic_devices",
            "osteopaths",
            "package_stores_beer_wine_and_liquor",
            "paints_varnishes_and_supplies",
            "parking_lots_garages",
            "passenger_railways",
            "pawn_shops",
            "pet_shops_pet_food_and_supplies",
            "petroleum_and_petroleum_products",
            "photo_developing",
            "photographic_photocopy_microfilm_equipment_and_supplies",
            "photographic_studios",
            "picture_video_production",
            "piece_goods_notions_and_other_dry_goods",
            "plumbing_heating_equipment_and_supplies",
            "political_organizations",
            "postal_services_government_only",
            "precious_stones_and_metals_watches_and_jewelry",
            "professional_services",
            "public_warehousing_and_storage",
            "quick_copy_repro_and_blueprint",
            "railroads",
            "real_estate_agents_and_managers_rentals",
            "record_stores",
            "recreational_vehicle_rentals",
            "religious_goods_stores",
            "religious_organizations",
            "roofing_siding_sheet_metal",
            "secretarial_support_services",
            "security_brokers_dealers",
            "service_stations",
            "sewing_needlework_fabric_and_piece_goods_stores",
            "shoe_repair_hat_cleaning",
            "shoe_stores",
            "small_appliance_repair",
            "snowmobile_dealers",
            "special_trade_services",
            "specialty_cleaning",
            "sporting_goods_stores",
            "sporting_recreation_camps",
            "sports_and_riding_apparel_stores",
            "sports_clubs_fields",
            "stamp_and_coin_stores",
            "stationary_office_supplies_printing_and_writing_paper",
            "stationery_stores_office_and_school_supply_stores",
            "swimming_pools_sales",
            "t_ui_travel_germany",
            "tailors_alterations",
            "tax_payments_government_agencies",
            "tax_preparation_services",
            "taxicabs_limousines",
            "telecommunication_equipment_and_telephone_sales",
            "telecommunication_services",
            "telegraph_services",
            "tent_and_awning_shops",
            "testing_laboratories",
            "theatrical_ticket_agencies",
            "timeshares",
            "tire_retreading_and_repair",
            "tolls_bridge_fees",
            "tourist_attractions_and_exhibits",
            "towing_services",
            "trailer_parks_campgrounds",
            "transportation_services",
            "travel_agencies_tour_operators",
            "truck_stop_iteration",
            "truck_utility_trailer_rentals",
            "typesetting_plate_making_and_related_services",
            "typewriter_stores",
            "u_s_federal_government_agencies_or_departments",
            "uniforms_commercial_clothing",
            "used_merchandise_and_secondhand_stores",
            "utilities",
            "variety_stores",
            "veterinary_services",
            "video_amusement_game_supplies",
            "video_game_arcades",
            "video_tape_rental_stores",
            "vocational_trade_schools",
            "watch_jewelry_repair",
            "welding_repair",
            "wholesale_clubs",
            "wig_and_toupee_stores",
            "wires_money_orders",
            "womens_accessory_and_specialty_shops",
            "womens_ready_to_wear_stores",
            "wrecking_and_salvage_yards"
          ],
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "spending_limits": {
        "items": {
          "$ref": "#/components/schemas/spending_limits_param"
        },
        "type": "array"
      },
      "spending_limits_currency": {
        "type": "string"
      }
    },
    "title": "authorization_controls_param_v2",
    "type": "object"
  },
  "automatic_payment_methods_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "automatic_payment_methods_param",
    "type": "object"
  },
  "automatic_tax_config": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "automatic_tax_config",
    "type": "object"
  },
  "automatic_tax_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "automatic_tax_param",
    "type": "object"
  },
  "automatic_tax_params": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "automatic_tax_params",
    "type": "object"
  },
  "balance_settings_param": {
    "properties": {
      "reconciliation_mode": {
        "enum": [
          "automatic",
          "manual"
        ],
        "type": "string"
      }
    },
    "title": "balance_settings_param",
    "type": "object"
  },
  "balance_transactions_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/balance_transaction"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/balance_transactions",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "BalanceTransactionsList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "bank_connections_resource_linked_account_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/financial_connections.account"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/financial_connections/accounts",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "BankConnectionsResourceLinkedAccountList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "bank_connections_resource_owner_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/financial_connections.account_owner"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "BankConnectionsResourceOwnerList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "bank_transfer_param": {
    "properties": {
      "eu_bank_transfer": {
        "$ref": "#/components/schemas/eu_bank_transfer_param"
      },
      "requested_address_types": {
        "items": {
          "enum": [
            "iban",
            "sepa",
            "sort_code",
            "spei",
            "zengin"
          ],
          "type": "string",
          "x-bypass-validation": true
        },
        "type": "array"
      },
      "type": {
        "enum": [
          "eu_bank_transfer",
          "gb_bank_transfer",
          "jp_bank_transfer",
          "mx_bank_transfer"
        ],
        "type": "string",
        "x-bypass-validation": true
      }
    },
    "required": [
      "type"
    ],
    "title": "bank_transfer_param",
    "type": "object"
  },
  "bbpos_wise_pose": {
    "properties": {
      "splashscreen": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "title": "bbpos_wise_pose",
    "type": "object"
  },
  "billing_clocks_resource_billing_clock_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/test_helpers.test_clock"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/test_helpers/test_clocks",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "BillingClocksResourceBillingClockList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "billing_details_address": {
    "properties": {
      "city": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "billing_details_address",
    "type": "object"
  },
  "billing_details_inner_params": {
    "properties": {
      "address": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/billing_details_address"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "email": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "phone": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "billing_details_inner_params",
    "type": "object"
  },
  "billing_specs": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/required_address"
      }
    },
    "required": [
      "address"
    ],
    "title": "billing_specs",
    "type": "object"
  },
  "billing_thresholds_param": {
    "properties": {
      "amount_gte": {
        "type": "integer"
      },
      "reset_billing_cycle_anchor": {
        "type": "boolean"
      }
    },
    "title": "billing_thresholds_param",
    "type": "object"
  },
  "branding_settings_specs": {
    "properties": {
      "icon": {
        "maxLength": 5000,
        "type": "string"
      },
      "logo": {
        "maxLength": 5000,
        "type": "string"
      },
      "primary_color": {
        "maxLength": 5000,
        "type": "string"
      },
      "secondary_color": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "branding_settings_specs",
    "type": "object"
  },
  "business_profile_create_param": {
    "properties": {
      "headline": {
        "maxLength": 60,
        "type": "string"
      },
      "privacy_policy_url": {
        "type": "string"
      },
      "terms_of_service_url": {
        "type": "string"
      }
    },
    "title": "business_profile_create_param",
    "type": "object"
  },
  "business_profile_specs": {
    "properties": {
      "mcc": {
        "maxLength": 4,
        "type": "string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "product_description": {
        "maxLength": 40000,
        "type": "string"
      },
      "support_address": {
        "$ref": "#/components/schemas/address_specs"
      },
      "support_email": {
        "type": "string"
      },
      "support_phone": {
        "maxLength": 5000,
        "type": "string"
      },
      "support_url": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "url": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "business_profile_specs",
    "type": "object"
  },
  "business_profile_update_param": {
    "properties": {
      "headline": {
        "maxLength": 60,
        "type": "string"
      },
      "privacy_policy_url": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "terms_of_service_url": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "title": "business_profile_update_param",
    "type": "object"
  },
  "canceled": {
    "properties": {
      "additional_documentation": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "canceled_at": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      },
      "cancellation_policy_provided": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "boolean"
          }
        ]
      },
      "cancellation_reason": {
        "maxLength": 1500,
        "type": "string"
      },
      "expected_at": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      },
      "explanation": {
        "maxLength": 1500,
        "type": "string"
      },
      "product_description": {
        "maxLength": 1500,
        "type": "string"
      },
      "product_type": {
        "enum": [
          "",
          "merchandise",
          "service"
        ],
        "type": "string"
      },
      "return_status": {
        "enum": [
          "",
          "merchant_rejected",
          "successful"
        ],
        "type": "string"
      },
      "returned_at": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      }
    },
    "title": "canceled",
    "type": "object"
  },
  "capabilities_param": {
    "properties": {
      "acss_debit_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "affirm_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "afterpay_clearpay_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "au_becs_debit_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "bacs_debit_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "bancontact_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "bank_transfer_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "blik_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "boleto_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "card_issuing": {
        "$ref": "#/components/schemas/capability_param"
      },
      "card_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "cartes_bancaires_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "eps_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "fpx_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "giropay_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "grabpay_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "ideal_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "india_international_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "jcb_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "klarna_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "konbini_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "legacy_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "link_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "oxxo_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "p24_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "paynow_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "promptpay_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "sepa_debit_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "sofort_payments": {
        "$ref": "#/components/schemas/capability_param"
      },
      "tax_reporting_us_1099_k": {
        "$ref": "#/components/schemas/capability_param"
      },
      "tax_reporting_us_1099_misc": {
        "$ref": "#/components/schemas/capability_param"
      },
      "transfers": {
        "$ref": "#/components/schemas/capability_param"
      },
      "treasury": {
        "$ref": "#/components/schemas/capability_param"
      },
      "us_bank_account_ach_payments": {
        "$ref": "#/components/schemas/capability_param"
      }
    },
    "title": "capabilities_param",
    "type": "object"
  },
  "capability_param": {
    "properties": {
      "requested": {
        "type": "boolean"
      }
    },
    "title": "capability_param",
    "type": "object"
  },
  "card_details_params": {
    "properties": {
      "cvc": {
        "maxLength": 5000,
        "type": "string"
      },
      "exp_month": {
        "type": "integer"
      },
      "exp_year": {
        "type": "integer"
      },
      "number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "exp_month",
      "exp_year",
      "number"
    ],
    "title": "card_details_params",
    "type": "object"
  },
  "card_issuing_settings_specs": {
    "properties": {
      "tos_acceptance": {
        "$ref": "#/components/schemas/settings_terms_of_service_specs"
      }
    },
    "title": "card_issuing_settings_specs",
    "type": "object"
  },
  "card_payments_settings_specs": {
    "properties": {
      "decline_on": {
        "$ref": "#/components/schemas/decline_charge_on_specs"
      },
      "statement_descriptor_prefix": {
        "maxLength": 10,
        "type": "string"
      },
      "statement_descriptor_prefix_kana": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "maxLength": 10,
            "type": "string"
          }
        ]
      },
      "statement_descriptor_prefix_kanji": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "maxLength": 10,
            "type": "string"
          }
        ]
      }
    },
    "title": "card_payments_settings_specs",
    "type": "object"
  },
  "card_present": {
    "properties": {
      "number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "card_present",
    "type": "object"
  },
  "cart": {
    "properties": {
      "currency": {
        "type": "string"
      },
      "line_items": {
        "items": {
          "$ref": "#/components/schemas/line_item"
        },
        "type": "array"
      },
      "tax": {
        "type": "integer"
      },
      "total": {
        "type": "integer"
      }
    },
    "required": [
      "currency",
      "line_items",
      "total"
    ],
    "title": "cart",
    "type": "object"
  },
  "cash_balance_param": {
    "properties": {
      "settings": {
        "$ref": "#/components/schemas/balance_settings_param"
      }
    },
    "title": "cash_balance_param",
    "type": "object"
  },
  "charge_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/charge"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/charges",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "ChargeList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "client_key_param": {
    "properties": {
      "customer_acceptance": {
        "$ref": "#/components/schemas/customer_acceptance_param"
      }
    },
    "required": [
      "customer_acceptance"
    ],
    "title": "client_key_param",
    "type": "object"
  },
  "company_ownership_declaration": {
    "properties": {
      "date": {
        "format": "unix-time",
        "type": "integer"
      },
      "ip": {
        "type": "string"
      },
      "user_agent": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "company_ownership_declaration",
    "type": "object"
  },
  "company_param": {
    "properties": {
      "tax_id": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "company_param",
    "type": "object"
  },
  "company_specs": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/address_specs"
      },
      "address_kana": {
        "$ref": "#/components/schemas/japan_address_kana_specs"
      },
      "address_kanji": {
        "$ref": "#/components/schemas/japan_address_kanji_specs"
      },
      "directors_provided": {
        "type": "boolean"
      },
      "executives_provided": {
        "type": "boolean"
      },
      "name": {
        "maxLength": 100,
        "type": "string"
      },
      "name_kana": {
        "maxLength": 100,
        "type": "string"
      },
      "name_kanji": {
        "maxLength": 100,
        "type": "string"
      },
      "owners_provided": {
        "type": "boolean"
      },
      "ownership_declaration": {
        "$ref": "#/components/schemas/company_ownership_declaration"
      },
      "phone": {
        "maxLength": 5000,
        "type": "string"
      },
      "registration_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "structure": {
        "enum": [
          "",
          "free_zone_establishment",
          "free_zone_llc",
          "government_instrumentality",
          "governmental_unit",
          "incorporated_non_profit",
          "limited_liability_partnership",
          "llc",
          "multi_member_llc",
          "private_company",
          "private_corporation",
          "private_partnership",
          "public_company",
          "public_corporation",
          "public_partnership",
          "single_member_llc",
          "sole_establishment",
          "sole_proprietorship",
          "tax_exempt_government_instrumentality",
          "unincorporated_association",
          "unincorporated_non_profit"
        ],
        "type": "string",
        "x-bypass-validation": true
      },
      "tax_id": {
        "maxLength": 5000,
        "type": "string"
      },
      "tax_id_registrar": {
        "maxLength": 5000,
        "type": "string"
      },
      "vat_id": {
        "maxLength": 5000,
        "type": "string"
      },
      "verification": {
        "$ref": "#/components/schemas/verification_specs"
      }
    },
    "title": "company_specs",
    "type": "object"
  },
  "configuration_item_params": {
    "properties": {
      "billing_thresholds": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/item_billing_thresholds_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "price_data": {
        "$ref": "#/components/schemas/recurring_price_data"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "title": "configuration_item_params",
    "type": "object"
  },
  "connect_js_account_token_company_specs": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/address_specs"
      },
      "address_kana": {
        "$ref": "#/components/schemas/japan_address_kana_specs"
      },
      "address_kanji": {
        "$ref": "#/components/schemas/japan_address_kanji_specs"
      },
      "directors_provided": {
        "type": "boolean"
      },
      "executives_provided": {
        "type": "boolean"
      },
      "name": {
        "maxLength": 100,
        "type": "string"
      },
      "name_kana": {
        "maxLength": 100,
        "type": "string"
      },
      "name_kanji": {
        "maxLength": 100,
        "type": "string"
      },
      "owners_provided": {
        "type": "boolean"
      },
      "ownership_declaration": {
        "$ref": "#/components/schemas/company_ownership_declaration"
      },
      "ownership_declaration_shown_and_signed": {
        "type": "boolean"
      },
      "phone": {
        "maxLength": 5000,
        "type": "string"
      },
      "registration_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "structure": {
        "enum": [
          "",
          "free_zone_establishment",
          "free_zone_llc",
          "government_instrumentality",
          "governmental_unit",
          "incorporated_non_profit",
          "limited_liability_partnership",
          "llc",
          "multi_member_llc",
          "private_company",
          "private_corporation",
          "private_partnership",
          "public_company",
          "public_corporation",
          "public_partnership",
          "single_member_llc",
          "sole_establishment",
          "sole_proprietorship",
          "tax_exempt_government_instrumentality",
          "unincorporated_association",
          "unincorporated_non_profit"
        ],
        "type": "string",
        "x-bypass-validation": true
      },
      "tax_id": {
        "maxLength": 5000,
        "type": "string"
      },
      "tax_id_registrar": {
        "maxLength": 5000,
        "type": "string"
      },
      "vat_id": {
        "maxLength": 5000,
        "type": "string"
      },
      "verification": {
        "$ref": "#/components/schemas/verification_specs"
      }
    },
    "title": "connect_js_account_token_company_specs",
    "type": "object"
  },
  "connect_js_account_token_specs": {
    "properties": {
      "business_type": {
        "enum": [
          "company",
          "government_entity",
          "individual",
          "non_profit"
        ],
        "type": "string",
        "x-bypass-validation": true
      },
      "company": {
        "$ref": "#/components/schemas/connect_js_account_token_company_specs"
      },
      "individual": {
        "$ref": "#/components/schemas/individual_specs"
      },
      "tos_shown_and_accepted": {
        "type": "boolean"
      }
    },
    "title": "connect_js_account_token_specs",
    "type": "object"
  },
  "consent_collection_params": {
    "properties": {
      "promotions": {
        "enum": [
          "auto",
          "none"
        ],
        "type": "string"
      },
      "terms_of_service": {
        "enum": [
          "none",
          "required"
        ],
        "type": "string"
      }
    },
    "title": "consent_collection_params",
    "type": "object"
  },
  "country_spec_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/country_spec"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/country_specs",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "CountrySpecList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "coupon_currency_option": {
    "properties": {
      "amount_off": {
        "type": "integer"
      }
    },
    "required": [
      "amount_off"
    ],
    "title": "CouponCurrencyOption",
    "type": "object"
  },
  "coupons_resource_coupon_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/coupon"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/coupons",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "CouponsResourceCouponList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "create_location_address_param": {
    "properties": {
      "city": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "country"
    ],
    "title": "create_location_address_param",
    "type": "object"
  },
  "credit_card_specs": {
    "properties": {
      "address_city": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_country": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_state": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_zip": {
        "maxLength": 5000,
        "type": "string"
      },
      "currency": {
        "maxLength": 5000,
        "type": "string"
      },
      "cvc": {
        "maxLength": 5000,
        "type": "string"
      },
      "exp_month": {
        "maxLength": 5000,
        "type": "string"
      },
      "exp_year": {
        "maxLength": 5000,
        "type": "string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "exp_month",
      "exp_year",
      "number"
    ],
    "title": "credit_card_specs",
    "type": "object"
  },
  "credit_note_line_item_params": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "description": {
        "maxLength": 5000,
        "type": "string"
      },
      "invoice_line_item": {
        "maxLength": 5000,
        "type": "string"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "type": {
        "enum": [
          "custom_line_item",
          "invoice_line_item"
        ],
        "type": "string"
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "title": "credit_note_line_item_params",
    "type": "object"
  },
  "credit_note_lines_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/credit_note_line_item"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "CreditNoteLinesList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "credit_notes_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/credit_note"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "CreditNotesList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "currency_option": {
    "properties": {
      "custom_unit_amount": {
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "maximum": {
            "type": "integer"
          },
          "minimum": {
            "type": "integer"
          },
          "preset": {
            "type": "integer"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "custom_unit_amount",
        "type": "object"
      },
      "minimum_amount": {
        "type": "integer"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      },
      "tiers": {
        "items": {
          "properties": {
            "flat_amount": {
              "type": "integer"
            },
            "flat_amount_decimal": {
              "format": "decimal",
              "type": "string"
            },
            "unit_amount": {
              "type": "integer"
            },
            "unit_amount_decimal": {
              "format": "decimal",
              "type": "string"
            },
            "up_to": {
              "oneOf": [
                {
                  "enum": [
                    "inf"
                  ],
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "required": [
            "up_to"
          ],
          "title": "tier",
          "type": "object"
        },
        "type": "array"
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      }
    },
    "title": "currency_option",
    "type": "object"
  },
  "currency_option_update": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      }
    },
    "title": "currency_option_update",
    "type": "object"
  },
  "currency_specific_config": {
    "properties": {
      "fixed_amounts": {
        "items": {
          "type": "integer"
        },
        "type": "array"
      },
      "percentages": {
        "items": {
          "type": "integer"
        },
        "type": "array"
      },
      "smart_tip_threshold": {
        "type": "integer"
      }
    },
    "title": "currency_specific_config",
    "type": "object"
  },
  "custom_field_params": {
    "properties": {
      "name": {
        "maxLength": 30,
        "type": "string"
      },
      "value": {
        "maxLength": 30,
        "type": "string"
      }
    },
    "required": [
      "name",
      "value"
    ],
    "title": "custom_field_params",
    "type": "object"
  },
  "custom_text_param": {
    "properties": {
      "shipping_address": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/custom_text_position_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "submit": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/custom_text_position_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "title": "custom_text_param",
    "type": "object"
  },
  "custom_text_position_param": {
    "properties": {
      "message": {
        "maxLength": 500,
        "type": "string"
      }
    },
    "required": [
      "message"
    ],
    "title": "custom_text_position_param",
    "type": "object"
  },
  "custom_unit_amount": {
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "maximum": {
        "type": "integer"
      },
      "minimum": {
        "type": "integer"
      },
      "preset": {
        "type": "integer"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "custom_unit_amount",
    "type": "object"
  },
  "customer_acceptance_param": {
    "properties": {
      "accepted_at": {
        "format": "unix-time",
        "type": "integer"
      },
      "offline": {
        "$ref": "#/components/schemas/offline_param"
      },
      "online": {
        "$ref": "#/components/schemas/online_param"
      },
      "type": {
        "enum": [
          "online"
        ],
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "online",
      "type"
    ],
    "title": "customer_acceptance_param",
    "type": "object"
  },
  "customer_balance_transaction_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/customer_balance_transaction"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "CustomerBalanceTransactionList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "customer_details_param": {
    "properties": {
      "address": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/optional_fields_address"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "shipping": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/customer_shipping"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "tax": {
        "$ref": "#/components/schemas/tax_param"
      },
      "tax_exempt": {
        "enum": [
          "",
          "exempt",
          "none",
          "reverse"
        ],
        "type": "string"
      },
      "tax_ids": {
        "items": {
          "$ref": "#/components/schemas/data_params"
        },
        "type": "array"
      }
    },
    "title": "customer_details_param",
    "type": "object"
  },
  "customer_details_params": {
    "properties": {
      "email": {
        "type": "string"
      }
    },
    "required": [
      "email"
    ],
    "title": "customer_details_params",
    "type": "object"
  },
  "customer_param": {
    "properties": {
      "custom_fields": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "$ref": "#/components/schemas/custom_field_params"
            },
            "type": "array"
          }
        ]
      },
      "default_payment_method": {
        "maxLength": 5000,
        "type": "string"
      },
      "footer": {
        "maxLength": 5000,
        "type": "string"
      },
      "rendering_options": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/rendering_options_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "title": "customer_param",
    "type": "object"
  },
  "customer_payment_method_resource_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/payment_method"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "CustomerPaymentMethodResourceList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "customer_payment_source_bank_account": {
    "properties": {
      "account_holder_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "account_holder_type": {
        "enum": [
          "company",
          "individual"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "account_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "currency": {
        "type": "string"
      },
      "object": {
        "enum": [
          "bank_account"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "routing_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "account_number",
      "country"
    ],
    "title": "customer_payment_source_bank_account",
    "type": "object"
  },
  "customer_payment_source_card": {
    "properties": {
      "address_city": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_country": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_state": {
        "maxLength": 5000,
        "type": "string"
      },
      "address_zip": {
        "maxLength": 5000,
        "type": "string"
      },
      "cvc": {
        "maxLength": 5000,
        "type": "string"
      },
      "exp_month": {
        "type": "integer"
      },
      "exp_year": {
        "type": "integer"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "number": {
        "maxLength": 5000,
        "type": "string"
      },
      "object": {
        "enum": [
          "card"
        ],
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "exp_month",
      "exp_year",
      "number"
    ],
    "title": "customer_payment_source_card",
    "type": "object"
  },
  "customer_resource_customer_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/customer"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/customers",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "CustomerResourceCustomerList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "customer_shipping": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/optional_fields_address"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "phone": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "address",
      "name"
    ],
    "title": "customer_shipping",
    "type": "object"
  },
  "customer_update_creation_param": {
    "properties": {
      "allowed_updates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "enum": [
                "address",
                "email",
                "phone",
                "shipping",
                "tax_id"
              ],
              "type": "string",
              "x-bypass-validation": true
            },
            "type": "array"
          }
        ]
      },
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "customer_update_creation_param",
    "type": "object"
  },
  "customer_update_params": {
    "properties": {
      "address": {
        "enum": [
          "auto",
          "never"
        ],
        "type": "string",
        "x-bypass-validation": true
      },
      "name": {
        "enum": [
          "auto",
          "never"
        ],
        "type": "string",
        "x-bypass-validation": true
      },
      "shipping": {
        "enum": [
          "auto",
          "never"
        ],
        "type": "string",
        "x-bypass-validation": true
      }
    },
    "title": "customer_update_params",
    "type": "object"
  },
  "customer_update_updating_param": {
    "properties": {
      "allowed_updates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "enum": [
                "address",
                "email",
                "phone",
                "shipping",
                "tax_id"
              ],
              "type": "string",
              "x-bypass-validation": true
            },
            "type": "array"
          }
        ]
      },
      "enabled": {
        "type": "boolean"
      }
    },
    "title": "customer_update_updating_param",
    "type": "object"
  },
  "customs_param": {
    "properties": {
      "eori_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "customs_param",
    "type": "object"
  },
  "cvc_params": {
    "properties": {
      "cvc": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "cvc"
    ],
    "title": "cvc_params",
    "type": "object"
  },
  "data_params": {
    "properties": {
      "type": {
        "enum": [
          "ae_trn",
          "au_abn",
          "au_arn",
          "bg_uic",
          "br_cnpj",
          "br_cpf",
          "ca_bn",
          "ca_gst_hst",
          "ca_pst_bc",
          "ca_pst_mb",
          "ca_pst_sk",
          "ca_qst",
          "ch_vat",
          "cl_tin",
          "eg_tin",
          "es_cif",
          "eu_oss_vat",
          "eu_vat",
          "gb_vat",
          "ge_vat",
          "hk_br",
          "hu_tin",
          "id_npwp",
          "il_vat",
          "in_gst",
          "is_vat",
          "jp_cn",
          "jp_rn",
          "jp_trn",
          "ke_pin",
          "kr_brn",
          "li_uid",
          "mx_rfc",
          "my_frp",
          "my_itn",
          "my_sst",
          "no_vat",
          "nz_gst",
          "ph_tin",
          "ru_inn",
          "ru_kpp",
          "sa_vat",
          "sg_gst",
          "sg_uen",
          "si_tin",
          "th_vat",
          "tr_tin",
          "tw_vat",
          "ua_vat",
          "us_ein",
          "za_vat"
        ],
        "maxLength": 5000,
        "type": "string",
        "x-bypass-validation": true
      },
      "value": {
        "type": "string"
      }
    },
    "required": [
      "type",
      "value"
    ],
    "title": "data_params",
    "type": "object"
  },
  "date_of_birth": {
    "properties": {
      "day": {
        "type": "integer"
      },
      "month": {
        "type": "integer"
      },
      "year": {
        "type": "integer"
      }
    },
    "required": [
      "day",
      "month",
      "year"
    ],
    "title": "date_of_birth",
    "type": "object"
  },
  "date_of_birth_specs": {
    "properties": {
      "day": {
        "type": "integer"
      },
      "month": {
        "type": "integer"
      },
      "year": {
        "type": "integer"
      }
    },
    "required": [
      "day",
      "month",
      "year"
    ],
    "title": "date_of_birth_specs",
    "type": "object"
  },
  "decline_charge_on_specs": {
    "properties": {
      "avs_failure": {
        "type": "boolean"
      },
      "cvc_failure": {
        "type": "boolean"
      }
    },
    "title": "decline_charge_on_specs",
    "type": "object"
  },
  "default_settings_params": {
    "properties": {
      "application_fee_percent": {
        "type": "number"
      },
      "automatic_tax": {
        "$ref": "#/components/schemas/automatic_tax_config"
      },
      "billing_cycle_anchor": {
        "enum": [
          "automatic",
          "phase_start"
        ],
        "type": "string"
      },
      "billing_thresholds": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/billing_thresholds_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "collection_method": {
        "enum": [
          "charge_automatically",
          "send_invoice"
        ],
        "type": "string"
      },
      "default_payment_method": {
        "maxLength": 5000,
        "type": "string"
      },
      "description": {
        "maxLength": 500,
        "type": "string"
      },
      "invoice_settings": {
        "$ref": "#/components/schemas/subscription_schedules_param"
      },
      "on_behalf_of": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "transfer_data": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/transfer_data_specs"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "title": "default_settings_params",
    "type": "object"
  },
  "delivery_estimate": {
    "properties": {
      "maximum": {
        "$ref": "#/components/schemas/delivery_estimate_bound"
      },
      "minimum": {
        "$ref": "#/components/schemas/delivery_estimate_bound"
      }
    },
    "title": "delivery_estimate",
    "type": "object"
  },
  "delivery_estimate_bound": {
    "properties": {
      "unit": {
        "enum": [
          "business_day",
          "day",
          "hour",
          "month",
          "week"
        ],
        "type": "string"
      },
      "value": {
        "type": "integer"
      }
    },
    "required": [
      "unit",
      "value"
    ],
    "title": "delivery_estimate_bound",
    "type": "object"
  },
  "destination_specs": {
    "properties": {
      "account": {
        "maxLength": 5000,
        "type": "string"
      },
      "amount": {
        "type": "integer"
      }
    },
    "required": [
      "account"
    ],
    "title": "destination_specs",
    "type": "object"
  },
  "discount_params": {
    "properties": {
      "coupon": {
        "maxLength": 5000,
        "type": "string"
      },
      "promotion_code": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "discount_params",
    "type": "object"
  },
  "discounts_data_param": {
    "properties": {
      "coupon": {
        "maxLength": 5000,
        "type": "string"
      },
      "discount": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "discounts_data_param",
    "type": "object"
  },
  "dispute_evidence_params": {
    "properties": {
      "access_activity_log": {
        "maxLength": 20000,
        "type": "string"
      },
      "billing_address": {
        "maxLength": 5000,
        "type": "string"
      },
      "cancellation_policy": {
        "type": "string"
      },
      "cancellation_policy_disclosure": {
        "maxLength": 20000,
        "type": "string"
      },
      "cancellation_rebuttal": {
        "maxLength": 20000,
        "type": "string"
      },
      "customer_communication": {
        "type": "string"
      },
      "customer_email_address": {
        "maxLength": 5000,
        "type": "string"
      },
      "customer_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "customer_purchase_ip": {
        "maxLength": 5000,
        "type": "string"
      },
      "customer_signature": {
        "type": "string"
      },
      "duplicate_charge_documentation": {
        "type": "string"
      },
      "duplicate_charge_explanation": {
        "maxLength": 20000,
        "type": "string"
      },
      "duplicate_charge_id": {
        "maxLength": 5000,
        "type": "string"
      },
      "product_description": {
        "maxLength": 20000,
        "type": "string"
      },
      "receipt": {
        "type": "string"
      },
      "refund_policy": {
        "type": "string"
      },
      "refund_policy_disclosure": {
        "maxLength": 20000,
        "type": "string"
      },
      "refund_refusal_explanation": {
        "maxLength": 20000,
        "type": "string"
      },
      "service_date": {
        "maxLength": 5000,
        "type": "string"
      },
      "service_documentation": {
        "type": "string"
      },
      "shipping_address": {
        "maxLength": 5000,
        "type": "string"
      },
      "shipping_carrier": {
        "maxLength": 5000,
        "type": "string"
      },
      "shipping_date": {
        "maxLength": 5000,
        "type": "string"
      },
      "shipping_documentation": {
        "type": "string"
      },
      "shipping_tracking_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "uncategorized_file": {
        "type": "string"
      },
      "uncategorized_text": {
        "maxLength": 20000,
        "type": "string"
      }
    },
    "title": "dispute_evidence_params",
    "type": "object"
  },
  "dispute_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/dispute"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/disputes",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "DisputeList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "document_options": {
    "properties": {
      "allowed_types": {
        "items": {
          "enum": [
            "driving_license",
            "id_card",
            "passport"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "require_id_number": {
        "type": "boolean"
      },
      "require_live_capture": {
        "type": "boolean"
      },
      "require_matching_selfie": {
        "type": "boolean"
      }
    },
    "title": "document_options",
    "type": "object"
  },
  "documents_param": {
    "properties": {
      "files": {
        "items": {
          "maxLength": 500,
          "type": "string"
        },
        "type": "array"
      }
    },
    "title": "documents_param",
    "type": "object"
  },
  "documents_specs": {
    "properties": {
      "bank_account_ownership_verification": {
        "$ref": "#/components/schemas/documents_param"
      },
      "company_license": {
        "$ref": "#/components/schemas/documents_param"
      },
      "company_memorandum_of_association": {
        "$ref": "#/components/schemas/documents_param"
      },
      "company_ministerial_decree": {
        "$ref": "#/components/schemas/documents_param"
      },
      "company_registration_verification": {
        "$ref": "#/components/schemas/documents_param"
      },
      "company_tax_id_verification": {
        "$ref": "#/components/schemas/documents_param"
      },
      "proof_of_registration": {
        "$ref": "#/components/schemas/documents_param"
      }
    },
    "title": "documents_specs",
    "type": "object"
  },
  "duplicate": {
    "properties": {
      "additional_documentation": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "card_statement": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "cash_receipt": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "check_image": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "explanation": {
        "maxLength": 1500,
        "type": "string"
      },
      "original_transaction": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "duplicate",
    "type": "object"
  },
  "encrypted_pin_param": {
    "properties": {
      "encrypted_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "encrypted_pin_param",
    "type": "object"
  },
  "end_user_details_params": {
    "properties": {
      "ip_address": {
        "type": "string"
      },
      "present": {
        "type": "boolean"
      }
    },
    "required": [
      "present"
    ],
    "title": "end_user_details_params",
    "type": "object"
  },
  "eu_bank_transfer_param": {
    "properties": {
      "country": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "country"
    ],
    "title": "eu_bank_transfer_param",
    "type": "object"
  },
  "eu_bank_transfer_params": {
    "properties": {
      "country": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "country"
    ],
    "title": "eu_bank_transfer_params",
    "type": "object"
  },
  "evidence_param": {
    "properties": {
      "canceled": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/canceled"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "duplicate": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/duplicate"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "fraudulent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/fraudulent"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "merchandise_not_as_described": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/merchandise_not_as_described"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "not_received": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/not_received"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "other": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/other"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "reason": {
        "enum": [
          "canceled",
          "duplicate",
          "fraudulent",
          "merchandise_not_as_described",
          "not_received",
          "other",
          "service_not_as_described"
        ],
        "type": "string",
        "x-bypass-validation": true
      },
      "service_not_as_described": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/service_not_as_described"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "title": "evidence_param",
    "type": "object"
  },
  "exchange_rate_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/exchange_rate"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/exchange_rates",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "ExchangeRateList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "external_account_list": {
    "properties": {
      "data": {
        "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
        "items": {
          "$ref": "#/components/schemas/payment_source",
          "x-bypass-validation": true
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "ExternalAccountList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "external_account_payout_bank_account": {
    "properties": {
      "account_holder_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "account_holder_type": {
        "enum": [
          "company",
          "individual"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "account_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "account_type": {
        "enum": [
          "checking",
          "futsu",
          "savings",
          "toza"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "currency": {
        "type": "string"
      },
      "object": {
        "enum": [
          "bank_account"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "routing_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "account_number",
      "country"
    ],
    "title": "external_account_payout_bank_account",
    "type": "object"
  },
  "failure_details_params": {
    "properties": {
      "code": {
        "enum": [
          "account_closed",
          "account_frozen",
          "bank_account_restricted",
          "bank_ownership_changed",
          "debit_not_authorized",
          "incorrect_account_holder_address",
          "incorrect_account_holder_name",
          "incorrect_account_holder_tax_id",
          "insufficient_funds",
          "invalid_account_number",
          "invalid_currency",
          "no_account",
          "other"
        ],
        "type": "string"
      }
    },
    "title": "failure_details_params",
    "type": "object"
  },
  "feature_access": {
    "properties": {
      "card_issuing": {
        "$ref": "#/components/schemas/access"
      },
      "deposit_insurance": {
        "$ref": "#/components/schemas/access"
      },
      "financial_addresses": {
        "$ref": "#/components/schemas/financial_addresses"
      },
      "inbound_transfers": {
        "$ref": "#/components/schemas/inbound_transfers"
      },
      "intra_stripe_flows": {
        "$ref": "#/components/schemas/access"
      },
      "outbound_payments": {
        "$ref": "#/components/schemas/outbound_payments"
      },
      "outbound_transfers": {
        "$ref": "#/components/schemas/outbound_transfers"
      }
    },
    "title": "feature_access",
    "type": "object"
  },
  "features_creation_param": {
    "properties": {
      "customer_update": {
        "$ref": "#/components/schemas/customer_update_creation_param"
      },
      "invoice_history": {
        "$ref": "#/components/schemas/invoice_list_param"
      },
      "payment_method_update": {
        "$ref": "#/components/schemas/payment_method_update_param"
      },
      "subscription_cancel": {
        "$ref": "#/components/schemas/subscription_cancel_creation_param"
      },
      "subscription_pause": {
        "$ref": "#/components/schemas/subscription_pause_param"
      },
      "subscription_update": {
        "$ref": "#/components/schemas/subscription_update_creation_param"
      }
    },
    "title": "features_creation_param",
    "type": "object"
  },
  "features_updating_param": {
    "properties": {
      "customer_update": {
        "$ref": "#/components/schemas/customer_update_updating_param"
      },
      "invoice_history": {
        "$ref": "#/components/schemas/invoice_list_param"
      },
      "payment_method_update": {
        "$ref": "#/components/schemas/payment_method_update_param"
      },
      "subscription_cancel": {
        "$ref": "#/components/schemas/subscription_cancel_updating_param"
      },
      "subscription_pause": {
        "$ref": "#/components/schemas/subscription_pause_param"
      },
      "subscription_update": {
        "$ref": "#/components/schemas/subscription_update_updating_param"
      }
    },
    "title": "features_updating_param",
    "type": "object"
  },
  "fee_refund_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/fee_refund"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "FeeRefundList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "file_file_link_list": {
    "nullable": true,
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/file_link"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/file_links",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "FileFileLinkList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "file_file_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/file"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/files",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "FileFileList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "file_link_creation_params": {
    "properties": {
      "create": {
        "type": "boolean"
      },
      "expires_at": {
        "format": "unix-time",
        "type": "integer"
      },
      "metadata": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/map_of_string"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "required": [
      "create"
    ],
    "title": "file_link_creation_params",
    "type": "object"
  },
  "filters_params": {
    "properties": {
      "countries": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      }
    },
    "required": [
      "countries"
    ],
    "title": "filters_params",
    "type": "object"
  },
  "financial_addresses": {
    "properties": {
      "aba": {
        "$ref": "#/components/schemas/access"
      }
    },
    "title": "financial_addresses",
    "type": "object"
  },
  "financial_connections_account_ownership2": {
    "nullable": true,
    "oneOf": [
      {
        "$ref": "#/components/schemas/financial_connections.account_ownership"
      },
      {
        "maxLength": 5000,
        "type": "string"
      }
    ],
    "title": "FinancialConnectionsAccountOwnership2",
    "x-expansionResources": {
      "oneOf": [
        {
          "$ref": "#/components/schemas/financial_connections.account_ownership"
        }
      ]
    }
  },
  "financial_reporting_finance_report_run_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/reporting.report_run"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/reporting/report_runs",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "FinancialReportingFinanceReportRunList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "financial_reporting_finance_report_type_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/reporting.report_type"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "FinancialReportingFinanceReportTypeList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "fixed_amount": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "currency": {
        "type": "string"
      },
      "currency_options": {
        "$ref": "#/components/schemas/map_of_shipping_rate_currency_option"
      }
    },
    "required": [
      "amount",
      "currency"
    ],
    "title": "fixed_amount",
    "type": "object"
  },
  "fixed_amount_update": {
    "properties": {
      "currency_options": {
        "$ref": "#/components/schemas/map_of_currency_option_update"
      }
    },
    "title": "fixed_amount_update",
    "type": "object"
  },
  "flow_data_after_completion_param": {
    "properties": {
      "hosted_confirmation": {
        "$ref": "#/components/schemas/after_completion_hosted_confirmation_param"
      },
      "redirect": {
        "$ref": "#/components/schemas/after_completion_redirect_param"
      },
      "type": {
        "enum": [
          "hosted_confirmation",
          "portal_homepage",
          "redirect"
        ],
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "title": "flow_data_after_completion_param",
    "type": "object"
  },
  "flow_data_param": {
    "properties": {
      "after_completion": {
        "$ref": "#/components/schemas/flow_data_after_completion_param"
      },
      "subscription_cancel": {
        "$ref": "#/components/schemas/flow_data_subscription_cancel_param"
      },
      "type": {
        "enum": [
          "payment_method_update",
          "subscription_cancel"
        ],
        "type": "string",
        "x-bypass-validation": true
      }
    },
    "required": [
      "type"
    ],
    "title": "flow_data_param",
    "type": "object"
  },
  "flow_data_subscription_cancel_param": {
    "properties": {
      "subscription": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "subscription"
    ],
    "title": "flow_data_subscription_cancel_param",
    "type": "object"
  },
  "fraud_details": {
    "properties": {
      "user_report": {
        "enum": [
          "",
          "fraudulent",
          "safe"
        ],
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "user_report"
    ],
    "title": "fraud_details",
    "type": "object"
  },
  "fraudulent": {
    "properties": {
      "additional_documentation": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "explanation": {
        "maxLength": 1500,
        "type": "string"
      }
    },
    "title": "fraudulent",
    "type": "object"
  },
  "from_invoice": {
    "properties": {
      "action": {
        "enum": [
          "revision"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "invoice": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "action",
      "invoice"
    ],
    "title": "from_invoice",
    "type": "object"
  },
  "from_quote_params": {
    "properties": {
      "is_revision": {
        "type": "boolean"
      },
      "quote": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "quote"
    ],
    "title": "from_quote_params",
    "type": "object"
  },
  "gelato_verification_report_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/identity.verification_report"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/identity/verification_reports",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "GelatoVerificationReportList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "gelato_verification_session_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/identity.verification_session"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/identity/verification_sessions",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "GelatoVerificationSessionList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "inbound_transfers": {
    "properties": {
      "ach": {
        "properties": {
          "requested": {
            "type": "boolean"
          }
        },
        "required": [
          "requested"
        ],
        "title": "access_with_ach_details",
        "type": "object"
      }
    },
    "title": "inbound_transfers",
    "type": "object"
  },
  "individual_param": {
    "properties": {
      "dob": {
        "$ref": "#/components/schemas/date_of_birth_specs"
      },
      "first_name": {
        "type": "string"
      },
      "last_name": {
        "type": "string"
      },
      "verification": {
        "$ref": "#/components/schemas/person_verification_param"
      }
    },
    "required": [
      "first_name",
      "last_name"
    ],
    "title": "individual_param",
    "type": "object"
  },
  "individual_specs": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/address_specs"
      },
      "address_kana": {
        "$ref": "#/components/schemas/japan_address_kana_specs"
      },
      "address_kanji": {
        "$ref": "#/components/schemas/japan_address_kanji_specs"
      },
      "dob": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/date_of_birth_specs"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "email": {
        "type": "string"
      },
      "first_name": {
        "maxLength": 100,
        "type": "string"
      },
      "first_name_kana": {
        "maxLength": 5000,
        "type": "string"
      },
      "first_name_kanji": {
        "maxLength": 5000,
        "type": "string"
      },
      "full_name_aliases": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 300,
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "gender": {
        "type": "string"
      },
      "id_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "id_number_secondary": {
        "maxLength": 5000,
        "type": "string"
      },
      "last_name": {
        "maxLength": 100,
        "type": "string"
      },
      "last_name_kana": {
        "maxLength": 5000,
        "type": "string"
      },
      "last_name_kanji": {
        "maxLength": 5000,
        "type": "string"
      },
      "maiden_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "metadata": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/map_of_string"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "phone": {
        "type": "string"
      },
      "political_exposure": {
        "enum": [
          "existing",
          "none"
        ],
        "type": "string"
      },
      "registered_address": {
        "$ref": "#/components/schemas/address_specs"
      },
      "ssn_last_4": {
        "maxLength": 5000,
        "type": "string"
      },
      "verification": {
        "$ref": "#/components/schemas/person_verification_specs"
      }
    },
    "title": "individual_specs",
    "type": "object"
  },
  "inline_product_params": {
    "properties": {
      "active": {
        "type": "boolean"
      },
      "id": {
        "maxLength": 5000,
        "type": "string"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "statement_descriptor": {
        "maxLength": 22,
        "type": "string"
      },
      "tax_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "unit_label": {
        "maxLength": 12,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "title": "inline_product_params",
    "type": "object"
  },
  "installment_plan": {
    "properties": {
      "count": {
        "type": "integer"
      },
      "interval": {
        "enum": [
          "month"
        ],
        "type": "string"
      },
      "type": {
        "enum": [
          "fixed_count"
        ],
        "type": "string"
      }
    },
    "required": [
      "count",
      "interval",
      "type"
    ],
    "title": "installment_plan",
    "type": "object"
  },
  "installments_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "plan": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/installment_plan"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "title": "installments_param",
    "type": "object"
  },
  "invoice_creation_params": {
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "invoice_data": {
        "$ref": "#/components/schemas/invoice_data_params"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "invoice_creation_params",
    "type": "object"
  },
  "invoice_data_params": {
    "properties": {
      "account_tax_ids": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "custom_fields": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "$ref": "#/components/schemas/custom_field_params"
            },
            "type": "array"
          }
        ]
      },
      "description": {
        "maxLength": 1500,
        "type": "string"
      },
      "footer": {
        "maxLength": 5000,
        "type": "string"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "rendering_options": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/rendering_options_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "title": "invoice_data_params",
    "type": "object"
  },
  "invoice_item_preview_params": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "currency": {
        "type": "string"
      },
      "description": {
        "maxLength": 5000,
        "type": "string"
      },
      "discountable": {
        "type": "boolean"
      },
      "discounts": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "$ref": "#/components/schemas/discounts_data_param"
            },
            "type": "array"
          }
        ]
      },
      "invoiceitem": {
        "maxLength": 5000,
        "type": "string"
      },
      "metadata": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/map_of_string"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "period": {
        "$ref": "#/components/schemas/period"
      },
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "price_data": {
        "$ref": "#/components/schemas/one_time_price_data"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      },
      "tax_code": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      }
    },
    "title": "invoice_item_preview_params",
    "type": "object"
  },
  "invoice_lines_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/line_item"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "InvoiceLinesList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "invoice_linked_account_options_param": {
    "properties": {
      "permissions": {
        "items": {
          "enum": [
            "balances",
            "ownership",
            "payment_method",
            "transactions"
          ],
          "maxLength": 5000,
          "type": "string",
          "x-bypass-validation": true
        },
        "type": "array"
      }
    },
    "title": "invoice_linked_account_options_param",
    "type": "object"
  },
  "invoice_list_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "invoice_list_param",
    "type": "object"
  },
  "invoices_items_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/invoiceitem"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/invoiceitems",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "InvoicesItemsList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "invoices_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/invoice"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/invoices",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "InvoicesList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "issuing_authorization_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/issuing.authorization"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/issuing/authorizations",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "IssuingAuthorizationList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "issuing_card_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/issuing.card"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/issuing/cards",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "IssuingCardList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "issuing_cardholder_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/issuing.cardholder"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/issuing/cardholders",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "IssuingCardholderList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "issuing_dispute_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/issuing.dispute"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/issuing/disputes",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "IssuingDisputeList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "issuing_transaction_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/issuing.transaction"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/issuing/transactions",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "IssuingTransactionList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "item_billing_thresholds_param": {
    "properties": {
      "usage_gte": {
        "type": "integer"
      }
    },
    "required": [
      "usage_gte"
    ],
    "title": "item_billing_thresholds_param",
    "type": "object"
  },
  "japan_address_kana_specs": {
    "properties": {
      "city": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      },
      "town": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "japan_address_kana_specs",
    "type": "object"
  },
  "japan_address_kanji_specs": {
    "properties": {
      "city": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      },
      "town": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "japan_address_kanji_specs",
    "type": "object"
  },
  "line_item": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "description": {
        "maxLength": 5000,
        "type": "string"
      },
      "quantity": {
        "type": "integer"
      }
    },
    "required": [
      "amount",
      "description",
      "quantity"
    ],
    "title": "line_item",
    "type": "object"
  },
  "line_item_create_params": {
    "properties": {
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "price_data": {
        "$ref": "#/components/schemas/price_data"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "title": "line_item_create_params",
    "type": "object"
  },
  "line_item_params": {
    "properties": {
      "adjustable_quantity": {
        "$ref": "#/components/schemas/adjustable_quantity_params"
      },
      "dynamic_tax_rates": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "price_data": {
        "$ref": "#/components/schemas/price_data_with_product_data"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_rates": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      }
    },
    "title": "line_item_params",
    "type": "object"
  },
  "line_item_update_params": {
    "properties": {
      "id": {
        "maxLength": 5000,
        "type": "string"
      },
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "price_data": {
        "$ref": "#/components/schemas/price_data"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "title": "line_item_update_params",
    "type": "object"
  },
  "line_items_create_params": {
    "properties": {
      "adjustable_quantity": {
        "$ref": "#/components/schemas/adjustable_quantity_params"
      },
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "quantity": {
        "type": "integer"
      }
    },
    "required": [
      "price",
      "quantity"
    ],
    "title": "line_items_create_params",
    "type": "object"
  },
  "line_items_update_params": {
    "properties": {
      "adjustable_quantity": {
        "$ref": "#/components/schemas/adjustable_quantity_params"
      },
      "id": {
        "maxLength": 5000,
        "type": "string"
      },
      "quantity": {
        "type": "integer"
      }
    },
    "required": [
      "id"
    ],
    "title": "line_items_update_params",
    "type": "object"
  },
  "linked_account_options_param": {
    "properties": {
      "permissions": {
        "items": {
          "enum": [
            "balances",
            "ownership",
            "payment_method",
            "transactions"
          ],
          "maxLength": 5000,
          "type": "string",
          "x-bypass-validation": true
        },
        "type": "array"
      },
      "return_url": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "linked_account_options_param",
    "type": "object"
  },
  "linked_flows_param": {
    "properties": {
      "source_flow_type": {
        "enum": [
          "credit_reversal",
          "other",
          "outbound_payment",
          "payout"
        ],
        "type": "string",
        "x-bypass-validation": true
      }
    },
    "required": [
      "source_flow_type"
    ],
    "title": "linked_flows_param",
    "type": "object"
  },
  "list_account_capability": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/capability"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "ListAccountCapability",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "login_page_create_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "login_page_create_param",
    "type": "object"
  },
  "login_page_update_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "login_page_update_param",
    "type": "object"
  },
  "mandate_acceptance_params": {
    "properties": {
      "date": {
        "format": "unix-time",
        "type": "integer"
      },
      "ip": {
        "type": "string"
      },
      "offline": {
        "$ref": "#/components/schemas/mandate_offline_acceptance_params"
      },
      "online": {
        "$ref": "#/components/schemas/mandate_online_acceptance_params"
      },
      "status": {
        "enum": [
          "accepted",
          "pending",
          "refused",
          "revoked"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "type": {
        "enum": [
          "offline",
          "online"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "user_agent": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "status"
    ],
    "title": "mandate_acceptance_params",
    "type": "object"
  },
  "mandate_offline_acceptance_params": {
    "properties": {
      "contact_email": {
        "type": "string"
      }
    },
    "required": [
      "contact_email"
    ],
    "title": "mandate_offline_acceptance_params",
    "type": "object"
  },
  "mandate_online_acceptance_params": {
    "properties": {
      "date": {
        "format": "unix-time",
        "type": "integer"
      },
      "ip": {
        "type": "string"
      },
      "user_agent": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "mandate_online_acceptance_params",
    "type": "object"
  },
  "mandate_params": {
    "properties": {
      "acceptance": {
        "$ref": "#/components/schemas/mandate_acceptance_params"
      },
      "amount": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      },
      "currency": {
        "type": "string"
      },
      "interval": {
        "enum": [
          "one_time",
          "scheduled",
          "variable"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "notification_method": {
        "enum": [
          "deprecated_none",
          "email",
          "manual",
          "none",
          "stripe_email"
        ],
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "mandate_params",
    "type": "object"
  },
  "map_of_array_of_string": {
    "additionalProperties": {
      "items": {
        "maxLength": 5000,
        "type": "string"
      },
      "type": "array"
    },
    "type": "object"
  },
  "map_of_coupon_currency_option": {
    "additionalProperties": {
      "$ref": "#/components/schemas/coupon_currency_option"
    },
    "type": "object"
  },
  "map_of_currency_option": {
    "additionalProperties": {
      "$ref": "#/components/schemas/currency_option"
    },
    "type": "object"
  },
  "map_of_currency_option_update": {
    "additionalProperties": {
      "$ref": "#/components/schemas/currency_option_update"
    },
    "type": "object"
  },
  "map_of_integer": {
    "additionalProperties": {
      "type": "integer"
    },
    "type": "object"
  },
  "map_of_long_string": {
    "additionalProperties": {
      "maxLength": 5000,
      "type": "string"
    },
    "type": "object"
  },
  "map_of_number": {
    "additionalProperties": {
      "type": "number"
    },
    "type": "object"
  },
  "map_of_promotion_code_currency_option": {
    "additionalProperties": {
      "$ref": "#/components/schemas/promotion_code_currency_option"
    },
    "type": "object"
  },
  "map_of_shipping_rate_currency_option": {
    "additionalProperties": {
      "$ref": "#/components/schemas/shipping_rate_currency_option"
    },
    "type": "object"
  },
  "map_of_short_string": {
    "additionalProperties": {
      "maxLength": 500,
      "type": "string"
    },
    "type": "object"
  },
  "map_of_string": {
    "additionalProperties": {
      "type": "string"
    },
    "type": "object"
  },
  "merchandise_not_as_described": {
    "properties": {
      "additional_documentation": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "explanation": {
        "maxLength": 1500,
        "type": "string"
      },
      "received_at": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      },
      "return_description": {
        "maxLength": 1500,
        "type": "string"
      },
      "return_status": {
        "enum": [
          "",
          "merchant_rejected",
          "successful"
        ],
        "type": "string"
      },
      "returned_at": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      }
    },
    "title": "merchandise_not_as_described",
    "type": "object"
  },
  "method_params": {
    "properties": {
      "delivery_estimate": {
        "$ref": "#/components/schemas/delivery_estimate"
      },
      "display_name": {
        "maxLength": 100,
        "type": "string"
      },
      "fixed_amount": {
        "$ref": "#/components/schemas/fixed_amount"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      },
      "tax_code": {
        "type": "string"
      },
      "type": {
        "enum": [
          "fixed_amount"
        ],
        "type": "string"
      }
    },
    "required": [
      "display_name"
    ],
    "title": "method_params",
    "type": "object"
  },
  "networks_options_param": {
    "properties": {
      "requested": {
        "items": {
          "enum": [
            "ach",
            "us_domestic_wire"
          ],
          "type": "string"
        },
        "type": "array"
      }
    },
    "title": "networks_options_param",
    "type": "object"
  },
  "not_received": {
    "properties": {
      "additional_documentation": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "expected_at": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      },
      "explanation": {
        "maxLength": 1500,
        "type": "string"
      },
      "product_description": {
        "maxLength": 1500,
        "type": "string"
      },
      "product_type": {
        "enum": [
          "",
          "merchandise",
          "service"
        ],
        "type": "string"
      }
    },
    "title": "not_received",
    "type": "object"
  },
  "notification_event_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/event"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/events",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "NotificationEventList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "notification_webhook_endpoint_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/webhook_endpoint"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/webhook_endpoints",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "NotificationWebhookEndpointList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "nullable_map_of_integer": {
    "additionalProperties": {
      "type": "integer"
    },
    "nullable": true,
    "type": "object"
  },
  "nullable_map_of_short_string": {
    "additionalProperties": {
      "maxLength": 500,
      "type": "string"
    },
    "nullable": true,
    "type": "object"
  },
  "offline_param": {
    "properties": {
    },
    "title": "offline_param",
    "type": "object"
  },
  "one_time_price_data": {
    "properties": {
      "currency": {
        "type": "string"
      },
      "product": {
        "maxLength": 5000,
        "type": "string"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      }
    },
    "required": [
      "currency",
      "product"
    ],
    "title": "one_time_price_data",
    "type": "object"
  },
  "online_param": {
    "properties": {
      "ip_address": {
        "type": "string"
      },
      "user_agent": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "ip_address",
      "user_agent"
    ],
    "title": "online_param",
    "type": "object"
  },
  "optional_fields_address": {
    "properties": {
      "city": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "optional_fields_address",
    "type": "object"
  },
  "optional_fields_shipping": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/optional_fields_address"
      },
      "carrier": {
        "maxLength": 5000,
        "type": "string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "phone": {
        "maxLength": 5000,
        "type": "string"
      },
      "tracking_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "address",
      "name"
    ],
    "title": "optional_fields_shipping",
    "type": "object"
  },
  "order_item_specs": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "currency": {
        "type": "string"
      },
      "description": {
        "maxLength": 1000,
        "type": "string"
      },
      "parent": {
        "maxLength": 5000,
        "type": "string"
      },
      "quantity": {
        "type": "integer"
      },
      "type": {
        "enum": [
          "discount",
          "shipping",
          "sku",
          "tax"
        ],
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "order_item_specs",
    "type": "object"
  },
  "order_params": {
    "properties": {
      "items": {
        "items": {
          "$ref": "#/components/schemas/order_item_specs"
        },
        "type": "array"
      },
      "shipping": {
        "$ref": "#/components/schemas/order_shipping"
      }
    },
    "title": "order_params",
    "type": "object"
  },
  "order_shipping": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/address"
      },
      "carrier": {
        "maxLength": 5000,
        "type": "string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "phone": {
        "maxLength": 5000,
        "type": "string"
      },
      "tracking_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "address"
    ],
    "title": "order_shipping",
    "type": "object"
  },
  "other": {
    "properties": {
      "additional_documentation": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "explanation": {
        "maxLength": 1500,
        "type": "string"
      },
      "product_description": {
        "maxLength": 1500,
        "type": "string"
      },
      "product_type": {
        "enum": [
          "",
          "merchandise",
          "service"
        ],
        "type": "string"
      }
    },
    "title": "other",
    "type": "object"
  },
  "outbound_payments": {
    "properties": {
      "ach": {
        "$ref": "#/components/schemas/access_with_ach_details"
      },
      "us_domestic_wire": {
        "$ref": "#/components/schemas/access"
      }
    },
    "title": "outbound_payments",
    "type": "object"
  },
  "outbound_transfers": {
    "properties": {
      "ach": {
        "$ref": "#/components/schemas/access_with_ach_details"
      },
      "us_domestic_wire": {
        "$ref": "#/components/schemas/access"
      }
    },
    "title": "outbound_transfers",
    "type": "object"
  },
  "owner": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/source_address"
      },
      "email": {
        "type": "string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "phone": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "owner",
    "type": "object"
  },
  "package_dimensions_specs": {
    "properties": {
      "height": {
        "type": "number"
      },
      "length": {
        "type": "number"
      },
      "weight": {
        "type": "number"
      },
      "width": {
        "type": "number"
      }
    },
    "required": [
      "height",
      "length",
      "weight",
      "width"
    ],
    "title": "package_dimensions_specs",
    "type": "object"
  },
  "pause_collection_param": {
    "properties": {
      "behavior": {
        "enum": [
          "keep_as_draft",
          "mark_uncollectible",
          "void"
        ],
        "type": "string"
      },
      "resumes_at": {
        "format": "unix-time",
        "type": "integer"
      }
    },
    "required": [
      "behavior"
    ],
    "title": "pause_collection_param",
    "type": "object"
  },
  "payment_flows_payment_intent_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/payment_intent"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/payment_intents",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PaymentFlowsPaymentIntentList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payment_flows_payment_method_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/payment_method"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/payment_methods",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PaymentFlowsPaymentMethodList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payment_flows_setup_intent_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/setup_intent"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/setup_intents",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PaymentFlowsSetupIntentList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payment_flows_setup_intent_setup_attempt_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/setup_attempt"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/setup_attempts",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PaymentFlowsSetupIntentSetupAttemptList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payment_intent_data_params": {
    "properties": {
      "application_fee_amount": {
        "type": "integer"
      },
      "capture_method": {
        "enum": [
          "automatic",
          "manual"
        ],
        "type": "string"
      },
      "description": {
        "maxLength": 1000,
        "type": "string"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "on_behalf_of": {
        "type": "string"
      },
      "receipt_email": {
        "type": "string"
      },
      "setup_future_usage": {
        "enum": [
          "off_session",
          "on_session"
        ],
        "type": "string"
      },
      "shipping": {
        "$ref": "#/components/schemas/shipping"
      },
      "statement_descriptor": {
        "maxLength": 22,
        "type": "string"
      },
      "statement_descriptor_suffix": {
        "maxLength": 22,
        "type": "string"
      },
      "transfer_data": {
        "$ref": "#/components/schemas/transfer_data_params"
      },
      "transfer_group": {
        "type": "string"
      }
    },
    "title": "payment_intent_data_params",
    "type": "object"
  },
  "payment_intent_param": {
    "properties": {
      "capture_method": {
        "enum": [
          "",
          "manual"
        ],
        "type": "string"
      },
      "cvc_token": {
        "maxLength": 5000,
        "type": "string"
      },
      "installments": {
        "$ref": "#/components/schemas/installments_param"
      },
      "mandate_options": {
        "$ref": "#/components/schemas/payment_method_options_card_mandate_options"
      },
      "network": {
        "enum": [
          "amex",
          "cartes_bancaires",
          "diners",
          "discover",
          "interac",
          "jcb",
          "mastercard",
          "unionpay",
          "unknown",
          "visa"
        ],
        "maxLength": 5000,
        "type": "string",
        "x-bypass-validation": true
      },
      "request_three_d_secure": {
        "enum": [
          "any",
          "automatic"
        ],
        "maxLength": 5000,
        "type": "string",
        "x-bypass-validation": true
      },
      "setup_future_usage": {
        "enum": [
          "",
          "none",
          "off_session",
          "on_session"
        ],
        "type": "string"
      },
      "statement_descriptor_suffix_kana": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "maxLength": 22,
            "type": "string"
          }
        ]
      },
      "statement_descriptor_suffix_kanji": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "maxLength": 17,
            "type": "string"
          }
        ]
      }
    },
    "title": "payment_intent_param",
    "type": "object"
  },
  "payment_intent_payment_method_options_mandate_options_param": {
    "properties": {
      "custom_mandate_url": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "interval_description": {
        "maxLength": 500,
        "type": "string"
      },
      "payment_schedule": {
        "enum": [
          "combined",
          "interval",
          "sporadic"
        ],
        "type": "string"
      },
      "transaction_type": {
        "enum": [
          "business",
          "personal"
        ],
        "type": "string"
      }
    },
    "title": "payment_intent_payment_method_options_mandate_options_param",
    "type": "object"
  },
  "payment_links_resource_list_line_items": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/item"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PaymentLinksResourceListLineItems",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payment_links_resource_payment_link_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/payment_link"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/payment_links",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PaymentLinksResourcePaymentLinkList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payment_method_data": {
    "properties": {
      "billing_details": {
        "$ref": "#/components/schemas/billing_details_inner_params"
      },
      "financial_account": {
        "type": "string"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "type": {
        "enum": [
          "financial_account",
          "us_bank_account"
        ],
        "type": "string"
      },
      "us_bank_account": {
        "properties": {
          "account_holder_type": {
            "enum": [
              "company",
              "individual"
            ],
            "type": "string"
          },
          "account_number": {
            "maxLength": 5000,
            "type": "string"
          },
          "account_type": {
            "enum": [
              "checking",
              "savings"
            ],
            "type": "string"
          },
          "financial_connections_account": {
            "maxLength": 5000,
            "type": "string"
          },
          "routing_number": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "type"
    ],
    "title": "payment_method_data",
    "type": "object"
  },
  "payment_method_data_params": {
    "properties": {
      "acss_debit": {
        "properties": {
          "account_number": {
            "maxLength": 5000,
            "type": "string"
          },
          "institution_number": {
            "maxLength": 5000,
            "type": "string"
          },
          "transit_number": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account_number",
          "institution_number",
          "transit_number"
        ],
        "type": "object"
      },
      "affirm": {
        "properties": {
        },
        "type": "object"
      },
      "afterpay_clearpay": {
        "properties": {
        },
        "type": "object"
      },
      "alipay": {
        "properties": {
        },
        "type": "object"
      },
      "au_becs_debit": {
        "properties": {
          "account_number": {
            "maxLength": 5000,
            "type": "string"
          },
          "bsb_number": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account_number",
          "bsb_number"
        ],
        "type": "object"
      },
      "bacs_debit": {
        "properties": {
          "account_number": {
            "maxLength": 5000,
            "type": "string"
          },
          "sort_code": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "bancontact": {
        "properties": {
        },
        "type": "object"
      },
      "billing_details": {
        "$ref": "#/components/schemas/billing_details_inner_params"
      },
      "blik": {
        "properties": {
        },
        "type": "object"
      },
      "boleto": {
        "properties": {
          "tax_id": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "tax_id"
        ],
        "type": "object"
      },
      "customer_balance": {
        "properties": {
        },
        "type": "object"
      },
      "eps": {
        "properties": {
          "bank": {
            "enum": [
              "arzte_und_apotheker_bank",
              "austrian_anadi_bank_ag",
              "bank_austria",
              "bankhaus_carl_spangler",
              "bankhaus_schelhammer_und_schattera_ag",
              "bawag_psk_ag",
              "bks_bank_ag",
              "brull_kallmus_bank_ag",
              "btv_vier_lander_bank",
              "capital_bank_grawe_gruppe_ag",
              "deutsche_bank_ag",
              "dolomitenbank",
              "easybank_ag",
              "erste_bank_und_sparkassen",
              "hypo_alpeadriabank_international_ag",
              "hypo_bank_burgenland_aktiengesellschaft",
              "hypo_noe_lb_fur_niederosterreich_u_wien",
              "hypo_oberosterreich_salzburg_steiermark",
              "hypo_tirol_bank_ag",
              "hypo_vorarlberg_bank_ag",
              "marchfelder_bank",
              "oberbank_ag",
              "raiffeisen_bankengruppe_osterreich",
              "schoellerbank_ag",
              "sparda_bank_wien",
              "volksbank_gruppe",
              "volkskreditbank_ag",
              "vr_bank_braunau"
            ],
            "maxLength": 5000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "fpx": {
        "properties": {
          "bank": {
            "enum": [
              "affin_bank",
              "agrobank",
              "alliance_bank",
              "ambank",
              "bank_islam",
              "bank_muamalat",
              "bank_of_china",
              "bank_rakyat",
              "bsn",
              "cimb",
              "deutsche_bank",
              "hong_leong_bank",
              "hsbc",
              "kfh",
              "maybank2e",
              "maybank2u",
              "ocbc",
              "pb_enterprise",
              "public_bank",
              "rhb",
              "standard_chartered",
              "uob"
            ],
            "maxLength": 5000,
            "type": "string",
            "x-bypass-validation": true
          }
        },
        "required": [
          "bank"
        ],
        "type": "object"
      },
      "giropay": {
        "properties": {
        },
        "type": "object"
      },
      "grabpay": {
        "properties": {
        },
        "type": "object"
      },
      "ideal": {
        "properties": {
          "bank": {
            "enum": [
              "abn_amro",
              "asn_bank",
              "bunq",
              "handelsbanken",
              "ing",
              "knab",
              "moneyou",
              "rabobank",
              "regiobank",
              "revolut",
              "sns_bank",
              "triodos_bank",
              "van_lanschot"
            ],
            "maxLength": 5000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "interac_present": {
        "properties": {
        },
        "type": "object"
      },
      "klarna": {
        "properties": {
          "dob": {
            "$ref": "#/components/schemas/date_of_birth"
          }
        },
        "type": "object"
      },
      "konbini": {
        "properties": {
        },
        "type": "object"
      },
      "link": {
        "properties": {
        },
        "type": "object"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "oxxo": {
        "properties": {
        },
        "type": "object"
      },
      "p24": {
        "properties": {
          "bank": {
            "enum": [
              "alior_bank",
              "bank_millennium",
              "bank_nowy_bfg_sa",
              "bank_pekao_sa",
              "banki_spbdzielcze",
              "blik",
              "bnp_paribas",
              "boz",
              "citi_handlowy",
              "credit_agricole",
              "envelobank",
              "etransfer_pocztowy24",
              "getin_bank",
              "ideabank",
              "ing",
              "inteligo",
              "mbank_mtransfer",
              "nest_przelew",
              "noble_pay",
              "pbac_z_ipko",
              "plus_bank",
              "santander_przelew24",
              "tmobile_usbugi_bankowe",
              "toyota_bank",
              "volkswagen_bank"
            ],
            "type": "string",
            "x-bypass-validation": true
          }
        },
        "type": "object"
      },
      "paynow": {
        "properties": {
        },
        "type": "object"
      },
      "pix": {
        "properties": {
        },
        "type": "object"
      },
      "promptpay": {
        "properties": {
        },
        "type": "object"
      },
      "radar_options": {
        "$ref": "#/components/schemas/radar_options"
      },
      "sepa_debit": {
        "properties": {
          "iban": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "iban"
        ],
        "type": "object"
      },
      "sofort": {
        "properties": {
          "country": {
            "enum": [
              "AT",
              "BE",
              "DE",
              "ES",
              "IT",
              "NL"
            ],
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "type": "object"
      },
      "type": {
        "enum": [
          "acss_debit",
          "affirm",
          "afterpay_clearpay",
          "alipay",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "blik",
          "boleto",
          "customer_balance",
          "eps",
          "fpx",
          "giropay",
          "grabpay",
          "ideal",
          "klarna",
          "konbini",
          "link",
          "oxxo",
          "p24",
          "paynow",
          "pix",
          "promptpay",
          "sepa_debit",
          "sofort",
          "us_bank_account",
          "wechat_pay"
        ],
        "type": "string",
        "x-bypass-validation": true
      },
      "us_bank_account": {
        "properties": {
          "account_holder_type": {
            "enum": [
              "company",
              "individual"
            ],
            "type": "string"
          },
          "account_number": {
            "maxLength": 5000,
            "type": "string"
          },
          "account_type": {
            "enum": [
              "checking",
              "savings"
            ],
            "type": "string"
          },
          "financial_connections_account": {
            "maxLength": 5000,
            "type": "string"
          },
          "routing_number": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "wechat_pay": {
        "properties": {
        },
        "type": "object"
      }
    },
    "required": [
      "type"
    ],
    "title": "payment_method_data_params",
    "type": "object"
  },
  "payment_method_options": {
    "properties": {
      "us_bank_account": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/payment_method_options_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "title": "payment_method_options",
    "type": "object"
  },
  "payment_method_options_mandate_options_param": {
    "properties": {
    },
    "title": "payment_method_options_mandate_options_param",
    "type": "object"
  },
  "payment_method_options_param": {
    "properties": {
      "acss_debit": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "affirm": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "afterpay_clearpay": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "alipay": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "au_becs_debit": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "bacs_debit": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "bancontact": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "blik": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "properties": {
              "code": {
                "maxLength": 5000,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {
          "code": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "boleto": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "card": {
        "$ref": "#/components/schemas/setup_intent_param"
      },
      "card_present": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/payment_method_options_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "customer_balance": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "eps": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "fpx": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "giropay": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "grabpay": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "ideal": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "interac_present": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/payment_method_options_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "klarna": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "konbini": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "link": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_link"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ],
        "properties": {
          "persistent_token": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "oxxo": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "p24": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "paynow": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "pix": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "promptpay": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/payment_method_options_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "sepa_debit": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "sofort": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "us_bank_account": {
        "$ref": "#/components/schemas/payment_method_options_param"
      },
      "wechat_pay": {
        "$ref": "#/components/schemas/payment_method_options_param"
      }
    },
    "title": "payment_method_options_param",
    "type": "object"
  },
  "payment_method_update_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "payment_method_update_param",
    "type": "object"
  },
  "payment_pages_checkout_session_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/checkout.session"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PaymentPagesCheckoutSessionList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payment_pages_checkout_session_list_line_items": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/item"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PaymentPagesCheckoutSessionListLineItems",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payment_settings": {
    "properties": {
      "default_mandate": {
        "maxLength": 5000,
        "type": "string"
      },
      "payment_method_options": {
        "$ref": "#/components/schemas/payment_method_options"
      },
      "payment_method_types": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "boleto",
                "card",
                "customer_balance",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "konbini",
                "link",
                "paynow",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-bypass-validation": true
            },
            "type": "array"
          }
        ]
      }
    },
    "title": "payment_settings",
    "type": "object"
  },
  "payments_settings_specs": {
    "properties": {
      "statement_descriptor": {
        "maxLength": 22,
        "type": "string"
      },
      "statement_descriptor_kana": {
        "maxLength": 22,
        "type": "string"
      },
      "statement_descriptor_kanji": {
        "maxLength": 22,
        "type": "string"
      }
    },
    "title": "payments_settings_specs",
    "type": "object"
  },
  "payout_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/payout"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/payouts",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PayoutList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "payout_settings_specs": {
    "properties": {
      "debit_negative_balances": {
        "type": "boolean"
      },
      "schedule": {
        "$ref": "#/components/schemas/transfer_schedule_specs"
      },
      "statement_descriptor": {
        "maxLength": 22,
        "type": "string"
      }
    },
    "title": "payout_settings_specs",
    "type": "object"
  },
  "pending_invoice_item_interval_params": {
    "properties": {
      "interval": {
        "enum": [
          "day",
          "month",
          "week",
          "year"
        ],
        "type": "string"
      },
      "interval_count": {
        "type": "integer"
      }
    },
    "required": [
      "interval"
    ],
    "title": "pending_invoice_item_interval_params",
    "type": "object"
  },
  "period": {
    "properties": {
      "end": {
        "format": "unix-time",
        "type": "integer"
      },
      "start": {
        "format": "unix-time",
        "type": "integer"
      }
    },
    "required": [
      "end",
      "start"
    ],
    "title": "period",
    "type": "object"
  },
  "person_documents_specs": {
    "properties": {
      "company_authorization": {
        "$ref": "#/components/schemas/documents_param"
      },
      "passport": {
        "$ref": "#/components/schemas/documents_param"
      },
      "visa": {
        "$ref": "#/components/schemas/documents_param"
      }
    },
    "title": "person_documents_specs",
    "type": "object"
  },
  "person_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/person"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PersonList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "person_token_specs": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/address_specs"
      },
      "address_kana": {
        "$ref": "#/components/schemas/japan_address_kana_specs"
      },
      "address_kanji": {
        "$ref": "#/components/schemas/japan_address_kanji_specs"
      },
      "dob": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/date_of_birth_specs"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "documents": {
        "$ref": "#/components/schemas/person_documents_specs"
      },
      "email": {
        "type": "string"
      },
      "first_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "first_name_kana": {
        "maxLength": 5000,
        "type": "string"
      },
      "first_name_kanji": {
        "maxLength": 5000,
        "type": "string"
      },
      "full_name_aliases": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "gender": {
        "type": "string"
      },
      "id_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "id_number_secondary": {
        "maxLength": 5000,
        "type": "string"
      },
      "last_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "last_name_kana": {
        "maxLength": 5000,
        "type": "string"
      },
      "last_name_kanji": {
        "maxLength": 5000,
        "type": "string"
      },
      "maiden_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "metadata": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/map_of_string"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "nationality": {
        "maxLength": 5000,
        "type": "string"
      },
      "phone": {
        "type": "string"
      },
      "political_exposure": {
        "maxLength": 5000,
        "type": "string"
      },
      "registered_address": {
        "$ref": "#/components/schemas/address_specs"
      },
      "relationship": {
        "$ref": "#/components/schemas/relationship_specs"
      },
      "ssn_last_4": {
        "type": "string"
      },
      "verification": {
        "$ref": "#/components/schemas/person_verification_specs"
      }
    },
    "title": "person_token_specs",
    "type": "object"
  },
  "person_verification_document_param": {
    "properties": {
      "back": {
        "maxLength": 5000,
        "type": "string"
      },
      "front": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "person_verification_document_param",
    "type": "object"
  },
  "person_verification_document_specs": {
    "properties": {
      "back": {
        "maxLength": 500,
        "type": "string"
      },
      "front": {
        "maxLength": 500,
        "type": "string"
      }
    },
    "title": "person_verification_document_specs",
    "type": "object"
  },
  "person_verification_param": {
    "properties": {
      "document": {
        "$ref": "#/components/schemas/person_verification_document_param"
      }
    },
    "title": "person_verification_param",
    "type": "object"
  },
  "person_verification_specs": {
    "properties": {
      "additional_document": {
        "$ref": "#/components/schemas/person_verification_document_specs"
      },
      "document": {
        "$ref": "#/components/schemas/person_verification_document_specs"
      }
    },
    "title": "person_verification_specs",
    "type": "object"
  },
  "phase_configuration_params": {
    "properties": {
      "add_invoice_items": {
        "items": {
          "$ref": "#/components/schemas/add_invoice_item_entry"
        },
        "type": "array"
      },
      "application_fee_percent": {
        "type": "number"
      },
      "automatic_tax": {
        "$ref": "#/components/schemas/automatic_tax_config"
      },
      "billing_cycle_anchor": {
        "enum": [
          "automatic",
          "phase_start"
        ],
        "type": "string"
      },
      "billing_thresholds": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/billing_thresholds_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "collection_method": {
        "enum": [
          "charge_automatically",
          "send_invoice"
        ],
        "type": "string"
      },
      "coupon": {
        "maxLength": 5000,
        "type": "string"
      },
      "currency": {
        "type": "string"
      },
      "default_payment_method": {
        "maxLength": 5000,
        "type": "string"
      },
      "default_tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "description": {
        "maxLength": 500,
        "type": "string"
      },
      "end_date": {
        "format": "unix-time",
        "oneOf": [
          {
            "enum": [
              "now"
            ],
            "maxLength": 5000,
            "type": "string"
          },
          {
            "type": "integer"
          }
        ],
        "type": "integer"
      },
      "invoice_settings": {
        "$ref": "#/components/schemas/subscription_schedules_param"
      },
      "items": {
        "items": {
          "$ref": "#/components/schemas/configuration_item_params"
        },
        "type": "array"
      },
      "iterations": {
        "type": "integer"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "on_behalf_of": {
        "type": "string"
      },
      "proration_behavior": {
        "enum": [
          "always_invoice",
          "create_prorations",
          "none"
        ],
        "type": "string"
      },
      "start_date": {
        "oneOf": [
          {
            "enum": [
              "now"
            ],
            "maxLength": 5000,
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      },
      "transfer_data": {
        "$ref": "#/components/schemas/transfer_data_specs"
      },
      "trial": {
        "type": "boolean"
      },
      "trial_end": {
        "format": "unix-time",
        "oneOf": [
          {
            "enum": [
              "now"
            ],
            "maxLength": 5000,
            "type": "string"
          },
          {
            "type": "integer"
          }
        ],
        "type": "integer"
      }
    },
    "required": [
      "items"
    ],
    "title": "phase_configuration_params",
    "type": "object"
  },
  "phone_number_collection_params": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "phone_number_collection_params",
    "type": "object"
  },
  "pii_token_specs": {
    "properties": {
      "id_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "pii_token_specs",
    "type": "object"
  },
  "platform_earning_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/application_fee"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/application_fees",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PlatformEarningList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "platform_restrictions": {
    "properties": {
      "inbound_flows": {
        "enum": [
          "restricted",
          "unrestricted"
        ],
        "type": "string"
      },
      "outbound_flows": {
        "enum": [
          "restricted",
          "unrestricted"
        ],
        "type": "string"
      }
    },
    "title": "platform_restrictions",
    "type": "object"
  },
  "portal_configuration_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/billing_portal.configuration"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/billing_portal/configurations",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PortalConfigurationList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "price_data": {
    "properties": {
      "currency": {
        "type": "string"
      },
      "product": {
        "maxLength": 5000,
        "type": "string"
      },
      "recurring": {
        "$ref": "#/components/schemas/recurring_adhoc"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      }
    },
    "required": [
      "currency",
      "product"
    ],
    "title": "price_data",
    "type": "object"
  },
  "price_data_with_product_data": {
    "properties": {
      "currency": {
        "type": "string"
      },
      "product": {
        "maxLength": 5000,
        "type": "string"
      },
      "product_data": {
        "$ref": "#/components/schemas/product_data"
      },
      "recurring": {
        "$ref": "#/components/schemas/recurring_adhoc"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      }
    },
    "required": [
      "currency"
    ],
    "title": "price_data_with_product_data",
    "type": "object"
  },
  "price_data_without_product": {
    "properties": {
      "currency": {
        "type": "string"
      },
      "currency_options": {
        "$ref": "#/components/schemas/map_of_currency_option"
      },
      "recurring": {
        "$ref": "#/components/schemas/recurring_adhoc"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      }
    },
    "required": [
      "currency"
    ],
    "title": "price_data_without_product",
    "type": "object"
  },
  "price_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/price"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/prices",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PriceList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "process_config": {
    "properties": {
      "skip_tipping": {
        "type": "boolean"
      },
      "tipping": {
        "$ref": "#/components/schemas/tipping_config"
      }
    },
    "title": "process_config",
    "type": "object"
  },
  "product_data": {
    "properties": {
      "description": {
        "maxLength": 40000,
        "type": "string"
      },
      "images": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "tax_code": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "title": "product_data",
    "type": "object"
  },
  "product_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/product"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/products",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "ProductList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "promotion_code_currency_option": {
    "properties": {
      "minimum_amount": {
        "type": "integer"
      }
    },
    "title": "promotion_code_currency_option",
    "type": "object"
  },
  "promotion_codes_resource_promotion_code_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/promotion_code"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/promotion_codes",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "PromotionCodesResourcePromotionCodeList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "quote_param": {
    "properties": {
      "days_until_due": {
        "type": "integer"
      }
    },
    "title": "quote_param",
    "type": "object"
  },
  "quotes_resource_list_line_items": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/item"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "QuotesResourceListLineItems",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "quotes_resource_quote_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/quote"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/quotes",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "QuotesResourceQuoteList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "radar_early_fraud_warning_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/radar.early_fraud_warning"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/radar/early_fraud_warnings",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "RadarEarlyFraudWarningList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "radar_list_list_item_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/radar.value_list_item"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/radar/value_list_items",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "RadarListListItemList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "radar_list_list_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/radar.value_list"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/radar/value_lists",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "RadarListListList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "radar_options": {
    "properties": {
      "session": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "radar_options",
    "type": "object"
  },
  "radar_review_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/review"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "RadarReviewList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "range_query_specs": {
    "properties": {
      "gt": {
        "type": "integer"
      },
      "gte": {
        "type": "integer"
      },
      "lt": {
        "type": "integer"
      },
      "lte": {
        "type": "integer"
      }
    },
    "title": "range_query_specs",
    "type": "object"
  },
  "receiver_params": {
    "properties": {
      "refund_attributes_method": {
        "enum": [
          "email",
          "manual",
          "none"
        ],
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "receiver_params",
    "type": "object"
  },
  "recovery_params": {
    "properties": {
      "allow_promotion_codes": {
        "type": "boolean"
      },
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "recovery_params",
    "type": "object"
  },
  "recurring": {
    "properties": {
      "aggregate_usage": {
        "enum": [
          "last_during_period",
          "last_ever",
          "max",
          "sum"
        ],
        "type": "string"
      },
      "interval": {
        "enum": [
          "day",
          "month",
          "week",
          "year"
        ],
        "type": "string"
      },
      "interval_count": {
        "type": "integer"
      },
      "usage_type": {
        "enum": [
          "licensed",
          "metered"
        ],
        "type": "string"
      }
    },
    "required": [
      "interval"
    ],
    "title": "recurring",
    "type": "object"
  },
  "recurring_adhoc": {
    "properties": {
      "interval": {
        "enum": [
          "day",
          "month",
          "week",
          "year"
        ],
        "type": "string"
      },
      "interval_count": {
        "type": "integer"
      }
    },
    "required": [
      "interval"
    ],
    "title": "recurring_adhoc",
    "type": "object"
  },
  "recurring_price_data": {
    "properties": {
      "currency": {
        "type": "string"
      },
      "product": {
        "maxLength": 5000,
        "type": "string"
      },
      "recurring": {
        "$ref": "#/components/schemas/recurring_adhoc"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      }
    },
    "required": [
      "currency",
      "product",
      "recurring"
    ],
    "title": "recurring_price_data",
    "type": "object"
  },
  "redirect_params": {
    "properties": {
      "return_url": {
        "type": "string"
      }
    },
    "required": [
      "return_url"
    ],
    "title": "redirect_params",
    "type": "object"
  },
  "refund_list": {
    "nullable": true,
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/refund"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "RefundList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "relationship_specs": {
    "properties": {
      "director": {
        "type": "boolean"
      },
      "executive": {
        "type": "boolean"
      },
      "owner": {
        "type": "boolean"
      },
      "percent_ownership": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "number"
          }
        ]
      },
      "representative": {
        "type": "boolean"
      },
      "title": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "relationship_specs",
    "type": "object"
  },
  "rendering_options_param": {
    "properties": {
      "amount_tax_display": {
        "enum": [
          "",
          "exclude_tax",
          "include_inclusive_tax"
        ],
        "type": "string"
      }
    },
    "title": "rendering_options_param",
    "type": "object"
  },
  "required_address": {
    "properties": {
      "city": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "city",
      "country",
      "line1",
      "postal_code"
    ],
    "title": "required_address",
    "type": "object"
  },
  "restrictions_params": {
    "properties": {
      "currency_options": {
        "$ref": "#/components/schemas/map_of_currency_option"
      },
      "first_time_transaction": {
        "type": "boolean"
      },
      "minimum_amount": {
        "type": "integer"
      },
      "minimum_amount_currency": {
        "type": "string"
      }
    },
    "title": "restrictions_params",
    "type": "object"
  },
  "returned_details_params": {
    "properties": {
      "code": {
        "enum": [
          "account_closed",
          "account_frozen",
          "bank_account_restricted",
          "bank_ownership_changed",
          "declined",
          "incorrect_account_holder_name",
          "invalid_account_number",
          "invalid_currency",
          "no_account",
          "other"
        ],
        "type": "string"
      }
    },
    "title": "returned_details_params",
    "type": "object"
  },
  "run_parameter_specs": {
    "properties": {
      "columns": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "connected_account": {
        "type": "string"
      },
      "currency": {
        "type": "string"
      },
      "interval_end": {
        "format": "unix-time",
        "type": "integer"
      },
      "interval_start": {
        "format": "unix-time",
        "type": "integer"
      },
      "payout": {
        "type": "string"
      },
      "reporting_category": {
        "enum": [
          "advance",
          "advance_funding",
          "anticipation_repayment",
          "charge",
          "charge_failure",
          "connect_collection_transfer",
          "connect_reserved_funds",
          "contribution",
          "dispute",
          "dispute_reversal",
          "fee",
          "financing_paydown",
          "financing_paydown_reversal",
          "financing_payout",
          "financing_payout_reversal",
          "issuing_authorization_hold",
          "issuing_authorization_release",
          "issuing_dispute",
          "issuing_transaction",
          "network_cost",
          "other_adjustment",
          "partial_capture_reversal",
          "payout",
          "payout_reversal",
          "platform_earning",
          "platform_earning_refund",
          "refund",
          "refund_failure",
          "risk_reserved_funds",
          "tax",
          "topup",
          "topup_reversal",
          "transfer",
          "transfer_reversal"
        ],
        "maxLength": 5000,
        "type": "string",
        "x-bypass-validation": true
      },
      "timezone": {
        "enum": [
          "Africa/Abidjan",
          "Africa/Accra",
          "Africa/Addis_Ababa",
          "Africa/Algiers",
          "Africa/Asmara",
          "Africa/Asmera",
          "Africa/Bamako",
          "Africa/Bangui",
          "Africa/Banjul",
          "Africa/Bissau",
          "Africa/Blantyre",
          "Africa/Brazzaville",
          "Africa/Bujumbura",
          "Africa/Cairo",
          "Africa/Casablanca",
          "Africa/Ceuta",
          "Africa/Conakry",
          "Africa/Dakar",
          "Africa/Dar_es_Salaam",
          "Africa/Djibouti",
          "Africa/Douala",
          "Africa/El_Aaiun",
          "Africa/Freetown",
          "Africa/Gaborone",
          "Africa/Harare",
          "Africa/Johannesburg",
          "Africa/Juba",
          "Africa/Kampala",
          "Africa/Khartoum",
          "Africa/Kigali",
          "Africa/Kinshasa",
          "Africa/Lagos",
          "Africa/Libreville",
          "Africa/Lome",
          "Africa/Luanda",
          "Africa/Lubumbashi",
          "Africa/Lusaka",
          "Africa/Malabo",
          "Africa/Maputo",
          "Africa/Maseru",
          "Africa/Mbabane",
          "Africa/Mogadishu",
          "Africa/Monrovia",
          "Africa/Nairobi",
          "Africa/Ndjamena",
          "Africa/Niamey",
          "Africa/Nouakchott",
          "Africa/Ouagadougou",
          "Africa/Porto-Novo",
          "Africa/Sao_Tome",
          "Africa/Timbuktu",
          "Africa/Tripoli",
          "Africa/Tunis",
          "Africa/Windhoek",
          "America/Adak",
          "America/Anchorage",
          "America/Anguilla",
          "America/Antigua",
          "America/Araguaina",
          "America/Argentina/Buenos_Aires",
          "America/Argentina/Catamarca",
          "America/Argentina/ComodRivadavia",
          "America/Argentina/Cordoba",
          "America/Argentina/Jujuy",
          "America/Argentina/La_Rioja",
          "America/Argentina/Mendoza",
          "America/Argentina/Rio_Gallegos",
          "America/Argentina/Salta",
          "America/Argentina/San_Juan",
          "America/Argentina/San_Luis",
          "America/Argentina/Tucuman",
          "America/Argentina/Ushuaia",
          "America/Aruba",
          "America/Asuncion",
          "America/Atikokan",
          "America/Atka",
          "America/Bahia",
          "America/Bahia_Banderas",
          "America/Barbados",
          "America/Belem",
          "America/Belize",
          "America/Blanc-Sablon",
          "America/Boa_Vista",
          "America/Bogota",
          "America/Boise",
          "America/Buenos_Aires",
          "America/Cambridge_Bay",
          "America/Campo_Grande",
          "America/Cancun",
          "America/Caracas",
          "America/Catamarca",
          "America/Cayenne",
          "America/Cayman",
          "America/Chicago",
          "America/Chihuahua",
          "America/Coral_Harbour",
          "America/Cordoba",
          "America/Costa_Rica",
          "America/Creston",
          "America/Cuiaba",
          "America/Curacao",
          "America/Danmarkshavn",
          "America/Dawson",
          "America/Dawson_Creek",
          "America/Denver",
          "America/Detroit",
          "America/Dominica",
          "America/Edmonton",
          "America/Eirunepe",
          "America/El_Salvador",
          "America/Ensenada",
          "America/Fort_Nelson",
          "America/Fort_Wayne",
          "America/Fortaleza",
          "America/Glace_Bay",
          "America/Godthab",
          "America/Goose_Bay",
          "America/Grand_Turk",
          "America/Grenada",
          "America/Guadeloupe",
          "America/Guatemala",
          "America/Guayaquil",
          "America/Guyana",
          "America/Halifax",
          "America/Havana",
          "America/Hermosillo",
          "America/Indiana/Indianapolis",
          "America/Indiana/Knox",
          "America/Indiana/Marengo",
          "America/Indiana/Petersburg",
          "America/Indiana/Tell_City",
          "America/Indiana/Vevay",
          "America/Indiana/Vincennes",
          "America/Indiana/Winamac",
          "America/Indianapolis",
          "America/Inuvik",
          "America/Iqaluit",
          "America/Jamaica",
          "America/Jujuy",
          "America/Juneau",
          "America/Kentucky/Louisville",
          "America/Kentucky/Monticello",
          "America/Knox_IN",
          "America/Kralendijk",
          "America/La_Paz",
          "America/Lima",
          "America/Los_Angeles",
          "America/Louisville",
          "America/Lower_Princes",
          "America/Maceio",
          "America/Managua",
          "America/Manaus",
          "America/Marigot",
          "America/Martinique",
          "America/Matamoros",
          "America/Mazatlan",
          "America/Mendoza",
          "America/Menominee",
          "America/Merida",
          "America/Metlakatla",
          "America/Mexico_City",
          "America/Miquelon",
          "America/Moncton",
          "America/Monterrey",
          "America/Montevideo",
          "America/Montreal",
          "America/Montserrat",
          "America/Nassau",
          "America/New_York",
          "America/Nipigon",
          "America/Nome",
          "America/Noronha",
          "America/North_Dakota/Beulah",
          "America/North_Dakota/Center",
          "America/North_Dakota/New_Salem",
          "America/Nuuk",
          "America/Ojinaga",
          "America/Panama",
          "America/Pangnirtung",
          "America/Paramaribo",
          "America/Phoenix",
          "America/Port-au-Prince",
          "America/Port_of_Spain",
          "America/Porto_Acre",
          "America/Porto_Velho",
          "America/Puerto_Rico",
          "America/Punta_Arenas",
          "America/Rainy_River",
          "America/Rankin_Inlet",
          "America/Recife",
          "America/Regina",
          "America/Resolute",
          "America/Rio_Branco",
          "America/Rosario",
          "America/Santa_Isabel",
          "America/Santarem",
          "America/Santiago",
          "America/Santo_Domingo",
          "America/Sao_Paulo",
          "America/Scoresbysund",
          "America/Shiprock",
          "America/Sitka",
          "America/St_Barthelemy",
          "America/St_Johns",
          "America/St_Kitts",
          "America/St_Lucia",
          "America/St_Thomas",
          "America/St_Vincent",
          "America/Swift_Current",
          "America/Tegucigalpa",
          "America/Thule",
          "America/Thunder_Bay",
          "America/Tijuana",
          "America/Toronto",
          "America/Tortola",
          "America/Vancouver",
          "America/Virgin",
          "America/Whitehorse",
          "America/Winnipeg",
          "America/Yakutat",
          "America/Yellowknife",
          "Antarctica/Casey",
          "Antarctica/Davis",
          "Antarctica/DumontDUrville",
          "Antarctica/Macquarie",
          "Antarctica/Mawson",
          "Antarctica/McMurdo",
          "Antarctica/Palmer",
          "Antarctica/Rothera",
          "Antarctica/South_Pole",
          "Antarctica/Syowa",
          "Antarctica/Troll",
          "Antarctica/Vostok",
          "Arctic/Longyearbyen",
          "Asia/Aden",
          "Asia/Almaty",
          "Asia/Amman",
          "Asia/Anadyr",
          "Asia/Aqtau",
          "Asia/Aqtobe",
          "Asia/Ashgabat",
          "Asia/Ashkhabad",
          "Asia/Atyrau",
          "Asia/Baghdad",
          "Asia/Bahrain",
          "Asia/Baku",
          "Asia/Bangkok",
          "Asia/Barnaul",
          "Asia/Beirut",
          "Asia/Bishkek",
          "Asia/Brunei",
          "Asia/Calcutta",
          "Asia/Chita",
          "Asia/Choibalsan",
          "Asia/Chongqing",
          "Asia/Chungking",
          "Asia/Colombo",
          "Asia/Dacca",
          "Asia/Damascus",
          "Asia/Dhaka",
          "Asia/Dili",
          "Asia/Dubai",
          "Asia/Dushanbe",
          "Asia/Famagusta",
          "Asia/Gaza",
          "Asia/Harbin",
          "Asia/Hebron",
          "Asia/Ho_Chi_Minh",
          "Asia/Hong_Kong",
          "Asia/Hovd",
          "Asia/Irkutsk",
          "Asia/Istanbul",
          "Asia/Jakarta",
          "Asia/Jayapura",
          "Asia/Jerusalem",
          "Asia/Kabul",
          "Asia/Kamchatka",
          "Asia/Karachi",
          "Asia/Kashgar",
          "Asia/Kathmandu",
          "Asia/Katmandu",
          "Asia/Khandyga",
          "Asia/Kolkata",
          "Asia/Krasnoyarsk",
          "Asia/Kuala_Lumpur",
          "Asia/Kuching",
          "Asia/Kuwait",
          "Asia/Macao",
          "Asia/Macau",
          "Asia/Magadan",
          "Asia/Makassar",
          "Asia/Manila",
          "Asia/Muscat",
          "Asia/Nicosia",
          "Asia/Novokuznetsk",
          "Asia/Novosibirsk",
          "Asia/Omsk",
          "Asia/Oral",
          "Asia/Phnom_Penh",
          "Asia/Pontianak",
          "Asia/Pyongyang",
          "Asia/Qatar",
          "Asia/Qostanay",
          "Asia/Qyzylorda",
          "Asia/Rangoon",
          "Asia/Riyadh",
          "Asia/Saigon",
          "Asia/Sakhalin",
          "Asia/Samarkand",
          "Asia/Seoul",
          "Asia/Shanghai",
          "Asia/Singapore",
          "Asia/Srednekolymsk",
          "Asia/Taipei",
          "Asia/Tashkent",
          "Asia/Tbilisi",
          "Asia/Tehran",
          "Asia/Tel_Aviv",
          "Asia/Thimbu",
          "Asia/Thimphu",
          "Asia/Tokyo",
          "Asia/Tomsk",
          "Asia/Ujung_Pandang",
          "Asia/Ulaanbaatar",
          "Asia/Ulan_Bator",
          "Asia/Urumqi",
          "Asia/Ust-Nera",
          "Asia/Vientiane",
          "Asia/Vladivostok",
          "Asia/Yakutsk",
          "Asia/Yangon",
          "Asia/Yekaterinburg",
          "Asia/Yerevan",
          "Atlantic/Azores",
          "Atlantic/Bermuda",
          "Atlantic/Canary",
          "Atlantic/Cape_Verde",
          "Atlantic/Faeroe",
          "Atlantic/Faroe",
          "Atlantic/Jan_Mayen",
          "Atlantic/Madeira",
          "Atlantic/Reykjavik",
          "Atlantic/South_Georgia",
          "Atlantic/St_Helena",
          "Atlantic/Stanley",
          "Australia/ACT",
          "Australia/Adelaide",
          "Australia/Brisbane",
          "Australia/Broken_Hill",
          "Australia/Canberra",
          "Australia/Currie",
          "Australia/Darwin",
          "Australia/Eucla",
          "Australia/Hobart",
          "Australia/LHI",
          "Australia/Lindeman",
          "Australia/Lord_Howe",
          "Australia/Melbourne",
          "Australia/NSW",
          "Australia/North",
          "Australia/Perth",
          "Australia/Queensland",
          "Australia/South",
          "Australia/Sydney",
          "Australia/Tasmania",
          "Australia/Victoria",
          "Australia/West",
          "Australia/Yancowinna",
          "Brazil/Acre",
          "Brazil/DeNoronha",
          "Brazil/East",
          "Brazil/West",
          "CET",
          "CST6CDT",
          "Canada/Atlantic",
          "Canada/Central",
          "Canada/Eastern",
          "Canada/Mountain",
          "Canada/Newfoundland",
          "Canada/Pacific",
          "Canada/Saskatchewan",
          "Canada/Yukon",
          "Chile/Continental",
          "Chile/EasterIsland",
          "Cuba",
          "EET",
          "EST",
          "EST5EDT",
          "Egypt",
          "Eire",
          "Etc/GMT",
          "Etc/GMT+0",
          "Etc/GMT+1",
          "Etc/GMT+10",
          "Etc/GMT+11",
          "Etc/GMT+12",
          "Etc/GMT+2",
          "Etc/GMT+3",
          "Etc/GMT+4",
          "Etc/GMT+5",
          "Etc/GMT+6",
          "Etc/GMT+7",
          "Etc/GMT+8",
          "Etc/GMT+9",
          "Etc/GMT-0",
          "Etc/GMT-1",
          "Etc/GMT-10",
          "Etc/GMT-11",
          "Etc/GMT-12",
          "Etc/GMT-13",
          "Etc/GMT-14",
          "Etc/GMT-2",
          "Etc/GMT-3",
          "Etc/GMT-4",
          "Etc/GMT-5",
          "Etc/GMT-6",
          "Etc/GMT-7",
          "Etc/GMT-8",
          "Etc/GMT-9",
          "Etc/GMT0",
          "Etc/Greenwich",
          "Etc/UCT",
          "Etc/UTC",
          "Etc/Universal",
          "Etc/Zulu",
          "Europe/Amsterdam",
          "Europe/Andorra",
          "Europe/Astrakhan",
          "Europe/Athens",
          "Europe/Belfast",
          "Europe/Belgrade",
          "Europe/Berlin",
          "Europe/Bratislava",
          "Europe/Brussels",
          "Europe/Bucharest",
          "Europe/Budapest",
          "Europe/Busingen",
          "Europe/Chisinau",
          "Europe/Copenhagen",
          "Europe/Dublin",
          "Europe/Gibraltar",
          "Europe/Guernsey",
          "Europe/Helsinki",
          "Europe/Isle_of_Man",
          "Europe/Istanbul",
          "Europe/Jersey",
          "Europe/Kaliningrad",
          "Europe/Kiev",
          "Europe/Kirov",
          "Europe/Kyiv",
          "Europe/Lisbon",
          "Europe/Ljubljana",
          "Europe/London",
          "Europe/Luxembourg",
          "Europe/Madrid",
          "Europe/Malta",
          "Europe/Mariehamn",
          "Europe/Minsk",
          "Europe/Monaco",
          "Europe/Moscow",
          "Europe/Nicosia",
          "Europe/Oslo",
          "Europe/Paris",
          "Europe/Podgorica",
          "Europe/Prague",
          "Europe/Riga",
          "Europe/Rome",
          "Europe/Samara",
          "Europe/San_Marino",
          "Europe/Sarajevo",
          "Europe/Saratov",
          "Europe/Simferopol",
          "Europe/Skopje",
          "Europe/Sofia",
          "Europe/Stockholm",
          "Europe/Tallinn",
          "Europe/Tirane",
          "Europe/Tiraspol",
          "Europe/Ulyanovsk",
          "Europe/Uzhgorod",
          "Europe/Vaduz",
          "Europe/Vatican",
          "Europe/Vienna",
          "Europe/Vilnius",
          "Europe/Volgograd",
          "Europe/Warsaw",
          "Europe/Zagreb",
          "Europe/Zaporozhye",
          "Europe/Zurich",
          "Factory",
          "GB",
          "GB-Eire",
          "GMT",
          "GMT+0",
          "GMT-0",
          "GMT0",
          "Greenwich",
          "HST",
          "Hongkong",
          "Iceland",
          "Indian/Antananarivo",
          "Indian/Chagos",
          "Indian/Christmas",
          "Indian/Cocos",
          "Indian/Comoro",
          "Indian/Kerguelen",
          "Indian/Mahe",
          "Indian/Maldives",
          "Indian/Mauritius",
          "Indian/Mayotte",
          "Indian/Reunion",
          "Iran",
          "Israel",
          "Jamaica",
          "Japan",
          "Kwajalein",
          "Libya",
          "MET",
          "MST",
          "MST7MDT",
          "Mexico/BajaNorte",
          "Mexico/BajaSur",
          "Mexico/General",
          "NZ",
          "NZ-CHAT",
          "Navajo",
          "PRC",
          "PST8PDT",
          "Pacific/Apia",
          "Pacific/Auckland",
          "Pacific/Bougainville",
          "Pacific/Chatham",
          "Pacific/Chuuk",
          "Pacific/Easter",
          "Pacific/Efate",
          "Pacific/Enderbury",
          "Pacific/Fakaofo",
          "Pacific/Fiji",
          "Pacific/Funafuti",
          "Pacific/Galapagos",
          "Pacific/Gambier",
          "Pacific/Guadalcanal",
          "Pacific/Guam",
          "Pacific/Honolulu",
          "Pacific/Johnston",
          "Pacific/Kanton",
          "Pacific/Kiritimati",
          "Pacific/Kosrae",
          "Pacific/Kwajalein",
          "Pacific/Majuro",
          "Pacific/Marquesas",
          "Pacific/Midway",
          "Pacific/Nauru",
          "Pacific/Niue",
          "Pacific/Norfolk",
          "Pacific/Noumea",
          "Pacific/Pago_Pago",
          "Pacific/Palau",
          "Pacific/Pitcairn",
          "Pacific/Pohnpei",
          "Pacific/Ponape",
          "Pacific/Port_Moresby",
          "Pacific/Rarotonga",
          "Pacific/Saipan",
          "Pacific/Samoa",
          "Pacific/Tahiti",
          "Pacific/Tarawa",
          "Pacific/Tongatapu",
          "Pacific/Truk",
          "Pacific/Wake",
          "Pacific/Wallis",
          "Pacific/Yap",
          "Poland",
          "Portugal",
          "ROC",
          "ROK",
          "Singapore",
          "Turkey",
          "UCT",
          "US/Alaska",
          "US/Aleutian",
          "US/Arizona",
          "US/Central",
          "US/East-Indiana",
          "US/Eastern",
          "US/Hawaii",
          "US/Indiana-Starke",
          "US/Michigan",
          "US/Mountain",
          "US/Pacific",
          "US/Pacific-New",
          "US/Samoa",
          "UTC",
          "Universal",
          "W-SU",
          "WET",
          "Zulu"
        ],
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "run_parameter_specs",
    "type": "object"
  },
  "scope_param": {
    "properties": {
      "type": {
        "enum": [
          "account",
          "user"
        ],
        "type": "string"
      },
      "user": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "title": "scope_param",
    "type": "object"
  },
  "search_result": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/subscription"
        },
        "type": "array"
      },
      "has_more": {
        "type": "boolean"
      },
      "next_page": {
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "search_result"
        ],
        "type": "string"
      },
      "total_count": {
        "description": "The total number of objects that match the query, only accurate up to 10,000.",
        "type": "integer"
      },
      "url": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "SearchResult",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "secret_key_param": {
    "properties": {
      "customer_acceptance": {
        "$ref": "#/components/schemas/customer_acceptance_param"
      }
    },
    "required": [
      "customer_acceptance"
    ],
    "title": "secret_key_param",
    "type": "object"
  },
  "secret_service_resource_secret_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/apps.secret"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/apps/secrets",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "SecretServiceResourceSecretList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "service_not_as_described": {
    "properties": {
      "additional_documentation": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "canceled_at": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      },
      "cancellation_reason": {
        "maxLength": 1500,
        "type": "string"
      },
      "explanation": {
        "maxLength": 1500,
        "type": "string"
      },
      "received_at": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      }
    },
    "title": "service_not_as_described",
    "type": "object"
  },
  "session_options_param": {
    "properties": {
      "document": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/document_options"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      }
    },
    "title": "session_options_param",
    "type": "object"
  },
  "settings_specs": {
    "properties": {
      "branding": {
        "$ref": "#/components/schemas/branding_settings_specs"
      },
      "card_issuing": {
        "$ref": "#/components/schemas/card_issuing_settings_specs"
      },
      "card_payments": {
        "$ref": "#/components/schemas/card_payments_settings_specs"
      },
      "payments": {
        "$ref": "#/components/schemas/payments_settings_specs"
      },
      "payouts": {
        "$ref": "#/components/schemas/payout_settings_specs"
      },
      "treasury": {
        "$ref": "#/components/schemas/treasury_settings_specs"
      }
    },
    "title": "settings_specs",
    "type": "object"
  },
  "settings_specs_update": {
    "properties": {
      "branding": {
        "$ref": "#/components/schemas/branding_settings_specs"
      },
      "card_issuing": {
        "$ref": "#/components/schemas/card_issuing_settings_specs"
      },
      "card_payments": {
        "$ref": "#/components/schemas/card_payments_settings_specs"
      },
      "payments": {
        "$ref": "#/components/schemas/payments_settings_specs"
      },
      "payouts": {
        "$ref": "#/components/schemas/payout_settings_specs"
      },
      "treasury": {
        "$ref": "#/components/schemas/treasury_settings_specs"
      }
    },
    "title": "settings_specs_update",
    "type": "object"
  },
  "settings_terms_of_service_specs": {
    "properties": {
      "date": {
        "format": "unix-time",
        "type": "integer"
      },
      "ip": {
        "type": "string"
      },
      "user_agent": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "settings_terms_of_service_specs",
    "type": "object"
  },
  "setup_intent_data_param": {
    "properties": {
      "description": {
        "maxLength": 1000,
        "type": "string"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "on_behalf_of": {
        "type": "string"
      }
    },
    "title": "setup_intent_data_param",
    "type": "object"
  },
  "setup_intent_mandate_options_param": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "amount_type": {
        "enum": [
          "fixed",
          "maximum"
        ],
        "type": "string"
      },
      "currency": {
        "type": "string"
      },
      "description": {
        "maxLength": 200,
        "type": "string"
      },
      "end_date": {
        "format": "unix-time",
        "type": "integer"
      },
      "interval": {
        "enum": [
          "day",
          "month",
          "sporadic",
          "week",
          "year"
        ],
        "type": "string"
      },
      "interval_count": {
        "type": "integer"
      },
      "reference": {
        "maxLength": 80,
        "type": "string"
      },
      "start_date": {
        "format": "unix-time",
        "type": "integer"
      },
      "supported_types": {
        "items": {
          "enum": [
            "india"
          ],
          "type": "string"
        },
        "type": "array"
      }
    },
    "required": [
      "amount",
      "amount_type",
      "currency",
      "interval",
      "reference",
      "start_date"
    ],
    "title": "setup_intent_mandate_options_param",
    "type": "object"
  },
  "setup_intent_param": {
    "properties": {
      "mandate_options": {
        "$ref": "#/components/schemas/setup_intent_mandate_options_param"
      },
      "network": {
        "enum": [
          "amex",
          "cartes_bancaires",
          "diners",
          "discover",
          "interac",
          "jcb",
          "mastercard",
          "unionpay",
          "unknown",
          "visa"
        ],
        "maxLength": 5000,
        "type": "string",
        "x-bypass-validation": true
      },
      "request_three_d_secure": {
        "enum": [
          "any",
          "automatic"
        ],
        "maxLength": 5000,
        "type": "string",
        "x-bypass-validation": true
      }
    },
    "title": "setup_intent_param",
    "type": "object"
  },
  "setup_intent_payment_method_options_mandate_options_param": {
    "properties": {
      "custom_mandate_url": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      },
      "default_for": {
        "items": {
          "enum": [
            "invoice",
            "subscription"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "interval_description": {
        "maxLength": 500,
        "type": "string"
      },
      "payment_schedule": {
        "enum": [
          "combined",
          "interval",
          "sporadic"
        ],
        "type": "string"
      },
      "transaction_type": {
        "enum": [
          "business",
          "personal"
        ],
        "type": "string"
      }
    },
    "title": "setup_intent_payment_method_options_mandate_options_param",
    "type": "object"
  },
  "setup_intent_single_use_params": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "currency": {
        "type": "string"
      }
    },
    "required": [
      "amount",
      "currency"
    ],
    "title": "setup_intent_single_use_params",
    "type": "object"
  },
  "shallow_order_specs": {
    "properties": {
      "items": {
        "items": {
          "$ref": "#/components/schemas/order_item_specs"
        },
        "type": "array"
      },
      "shipping": {
        "$ref": "#/components/schemas/order_shipping"
      }
    },
    "title": "shallow_order_specs",
    "type": "object"
  },
  "shipping": {
    "properties": {
      "address": {
        "properties": {
          "city": {
            "maxLength": 5000,
            "type": "string"
          },
          "country": {
            "maxLength": 5000,
            "type": "string"
          },
          "line1": {
            "maxLength": 5000,
            "type": "string"
          },
          "line2": {
            "maxLength": 5000,
            "type": "string"
          },
          "postal_code": {
            "maxLength": 5000,
            "type": "string"
          },
          "state": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "line1"
        ],
        "title": "address",
        "type": "object"
      },
      "carrier": {
        "maxLength": 5000,
        "type": "string"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "phone": {
        "maxLength": 5000,
        "type": "string"
      },
      "tracking_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "address",
      "name"
    ],
    "title": "shipping",
    "type": "object"
  },
  "shipping_address_collection_params": {
    "properties": {
      "allowed_countries": {
        "items": {
          "enum": [
            "AC",
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CV",
            "CW",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SZ",
            "TA",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VN",
            "VU",
            "WF",
            "WS",
            "XK",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW",
            "ZZ"
          ],
          "type": "string"
        },
        "type": "array"
      }
    },
    "required": [
      "allowed_countries"
    ],
    "title": "shipping_address_collection_params",
    "type": "object"
  },
  "shipping_option_params": {
    "properties": {
      "shipping_rate": {
        "maxLength": 5000,
        "type": "string"
      },
      "shipping_rate_data": {
        "$ref": "#/components/schemas/method_params"
      }
    },
    "title": "shipping_option_params",
    "type": "object"
  },
  "shipping_rate_currency_option": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "tax_behavior": {
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "type": "string"
      }
    },
    "required": [
      "amount"
    ],
    "title": "shipping_rate_currency_option",
    "type": "object"
  },
  "shipping_resources_shipping_rate_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/shipping_rate"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/shipping_rates",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "ShippingResourcesShippingRateList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "shipping_specs": {
    "properties": {
      "address": {
        "$ref": "#/components/schemas/required_address"
      },
      "customs": {
        "$ref": "#/components/schemas/customs_param"
      },
      "name": {
        "maxLength": 5000,
        "type": "string"
      },
      "phone_number": {
        "type": "string"
      },
      "require_signature": {
        "type": "boolean"
      },
      "service": {
        "enum": [
          "express",
          "priority",
          "standard"
        ],
        "type": "string",
        "x-bypass-validation": true
      },
      "type": {
        "enum": [
          "bulk",
          "individual"
        ],
        "type": "string"
      }
    },
    "required": [
      "address",
      "name"
    ],
    "title": "shipping_specs",
    "type": "object"
  },
  "sigma_scheduled_query_run_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/scheduled_query_run"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/sigma/scheduled_query_runs",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "SigmaScheduledQueryRunList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "source_address": {
    "properties": {
      "city": {
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "line1": {
        "maxLength": 5000,
        "type": "string"
      },
      "line2": {
        "maxLength": 5000,
        "type": "string"
      },
      "postal_code": {
        "maxLength": 5000,
        "type": "string"
      },
      "state": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "source_address",
    "type": "object"
  },
  "source_params": {
    "properties": {
      "type": {
        "enum": [
          "us_bank_account"
        ],
        "type": "string"
      },
      "us_bank_account": {
        "$ref": "#/components/schemas/us_bank_account_source_params"
      }
    },
    "required": [
      "type"
    ],
    "title": "source_params",
    "type": "object"
  },
  "spending_limits_param": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "categories": {
        "items": {
          "enum": [
            "ac_refrigeration_repair",
            "accounting_bookkeeping_services",
            "advertising_services",
            "agricultural_cooperative",
            "airlines_air_carriers",
            "airports_flying_fields",
            "ambulance_services",
            "amusement_parks_carnivals",
            "antique_reproductions",
            "antique_shops",
            "aquariums",
            "architectural_surveying_services",
            "art_dealers_and_galleries",
            "artists_supply_and_craft_shops",
            "auto_and_home_supply_stores",
            "auto_body_repair_shops",
            "auto_paint_shops",
            "auto_service_shops",
            "automated_cash_disburse",
            "automated_fuel_dispensers",
            "automobile_associations",
            "automotive_parts_and_accessories_stores",
            "automotive_tire_stores",
            "bail_and_bond_payments",
            "bakeries",
            "bands_orchestras",
            "barber_and_beauty_shops",
            "betting_casino_gambling",
            "bicycle_shops",
            "billiard_pool_establishments",
            "boat_dealers",
            "boat_rentals_and_leases",
            "book_stores",
            "books_periodicals_and_newspapers",
            "bowling_alleys",
            "bus_lines",
            "business_secretarial_schools",
            "buying_shopping_services",
            "cable_satellite_and_other_pay_television_and_radio",
            "camera_and_photographic_supply_stores",
            "candy_nut_and_confectionery_stores",
            "car_and_truck_dealers_new_used",
            "car_and_truck_dealers_used_only",
            "car_rental_agencies",
            "car_washes",
            "carpentry_services",
            "carpet_upholstery_cleaning",
            "caterers",
            "charitable_and_social_service_organizations_fundraising",
            "chemicals_and_allied_products",
            "child_care_services",
            "childrens_and_infants_wear_stores",
            "chiropodists_podiatrists",
            "chiropractors",
            "cigar_stores_and_stands",
            "civic_social_fraternal_associations",
            "cleaning_and_maintenance",
            "clothing_rental",
            "colleges_universities",
            "commercial_equipment",
            "commercial_footwear",
            "commercial_photography_art_and_graphics",
            "commuter_transport_and_ferries",
            "computer_network_services",
            "computer_programming",
            "computer_repair",
            "computer_software_stores",
            "computers_peripherals_and_software",
            "concrete_work_services",
            "construction_materials",
            "consulting_public_relations",
            "correspondence_schools",
            "cosmetic_stores",
            "counseling_services",
            "country_clubs",
            "courier_services",
            "court_costs",
            "credit_reporting_agencies",
            "cruise_lines",
            "dairy_products_stores",
            "dance_hall_studios_schools",
            "dating_escort_services",
            "dentists_orthodontists",
            "department_stores",
            "detective_agencies",
            "digital_goods_applications",
            "digital_goods_games",
            "digital_goods_large_volume",
            "digital_goods_media",
            "direct_marketing_catalog_merchant",
            "direct_marketing_combination_catalog_and_retail_merchant",
            "direct_marketing_inbound_telemarketing",
            "direct_marketing_insurance_services",
            "direct_marketing_other",
            "direct_marketing_outbound_telemarketing",
            "direct_marketing_subscription",
            "direct_marketing_travel",
            "discount_stores",
            "doctors",
            "door_to_door_sales",
            "drapery_window_covering_and_upholstery_stores",
            "drinking_places",
            "drug_stores_and_pharmacies",
            "drugs_drug_proprietaries_and_druggist_sundries",
            "dry_cleaners",
            "durable_goods",
            "duty_free_stores",
            "eating_places_restaurants",
            "educational_services",
            "electric_razor_stores",
            "electrical_parts_and_equipment",
            "electrical_services",
            "electronics_repair_shops",
            "electronics_stores",
            "elementary_secondary_schools",
            "employment_temp_agencies",
            "equipment_rental",
            "exterminating_services",
            "family_clothing_stores",
            "fast_food_restaurants",
            "financial_institutions",
            "fines_government_administrative_entities",
            "fireplace_fireplace_screens_and_accessories_stores",
            "floor_covering_stores",
            "florists",
            "florists_supplies_nursery_stock_and_flowers",
            "freezer_and_locker_meat_provisioners",
            "fuel_dealers_non_automotive",
            "funeral_services_crematories",
            "furniture_home_furnishings_and_equipment_stores_except_appliances",
            "furniture_repair_refinishing",
            "furriers_and_fur_shops",
            "general_services",
            "gift_card_novelty_and_souvenir_shops",
            "glass_paint_and_wallpaper_stores",
            "glassware_crystal_stores",
            "golf_courses_public",
            "government_services",
            "grocery_stores_supermarkets",
            "hardware_equipment_and_supplies",
            "hardware_stores",
            "health_and_beauty_spas",
            "hearing_aids_sales_and_supplies",
            "heating_plumbing_a_c",
            "hobby_toy_and_game_shops",
            "home_supply_warehouse_stores",
            "hospitals",
            "hotels_motels_and_resorts",
            "household_appliance_stores",
            "industrial_supplies",
            "information_retrieval_services",
            "insurance_default",
            "insurance_underwriting_premiums",
            "intra_company_purchases",
            "jewelry_stores_watches_clocks_and_silverware_stores",
            "landscaping_services",
            "laundries",
            "laundry_cleaning_services",
            "legal_services_attorneys",
            "luggage_and_leather_goods_stores",
            "lumber_building_materials_stores",
            "manual_cash_disburse",
            "marinas_service_and_supplies",
            "masonry_stonework_and_plaster",
            "massage_parlors",
            "medical_and_dental_labs",
            "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
            "medical_services",
            "membership_organizations",
            "mens_and_boys_clothing_and_accessories_stores",
            "mens_womens_clothing_stores",
            "metal_service_centers",
            "miscellaneous",
            "miscellaneous_apparel_and_accessory_shops",
            "miscellaneous_auto_dealers",
            "miscellaneous_business_services",
            "miscellaneous_food_stores",
            "miscellaneous_general_merchandise",
            "miscellaneous_general_services",
            "miscellaneous_home_furnishing_specialty_stores",
            "miscellaneous_publishing_and_printing",
            "miscellaneous_recreation_services",
            "miscellaneous_repair_shops",
            "miscellaneous_specialty_retail",
            "mobile_home_dealers",
            "motion_picture_theaters",
            "motor_freight_carriers_and_trucking",
            "motor_homes_dealers",
            "motor_vehicle_supplies_and_new_parts",
            "motorcycle_shops_and_dealers",
            "motorcycle_shops_dealers",
            "music_stores_musical_instruments_pianos_and_sheet_music",
            "news_dealers_and_newsstands",
            "non_fi_money_orders",
            "non_fi_stored_value_card_purchase_load",
            "nondurable_goods",
            "nurseries_lawn_and_garden_supply_stores",
            "nursing_personal_care",
            "office_and_commercial_furniture",
            "opticians_eyeglasses",
            "optometrists_ophthalmologist",
            "orthopedic_goods_prosthetic_devices",
            "osteopaths",
            "package_stores_beer_wine_and_liquor",
            "paints_varnishes_and_supplies",
            "parking_lots_garages",
            "passenger_railways",
            "pawn_shops",
            "pet_shops_pet_food_and_supplies",
            "petroleum_and_petroleum_products",
            "photo_developing",
            "photographic_photocopy_microfilm_equipment_and_supplies",
            "photographic_studios",
            "picture_video_production",
            "piece_goods_notions_and_other_dry_goods",
            "plumbing_heating_equipment_and_supplies",
            "political_organizations",
            "postal_services_government_only",
            "precious_stones_and_metals_watches_and_jewelry",
            "professional_services",
            "public_warehousing_and_storage",
            "quick_copy_repro_and_blueprint",
            "railroads",
            "real_estate_agents_and_managers_rentals",
            "record_stores",
            "recreational_vehicle_rentals",
            "religious_goods_stores",
            "religious_organizations",
            "roofing_siding_sheet_metal",
            "secretarial_support_services",
            "security_brokers_dealers",
            "service_stations",
            "sewing_needlework_fabric_and_piece_goods_stores",
            "shoe_repair_hat_cleaning",
            "shoe_stores",
            "small_appliance_repair",
            "snowmobile_dealers",
            "special_trade_services",
            "specialty_cleaning",
            "sporting_goods_stores",
            "sporting_recreation_camps",
            "sports_and_riding_apparel_stores",
            "sports_clubs_fields",
            "stamp_and_coin_stores",
            "stationary_office_supplies_printing_and_writing_paper",
            "stationery_stores_office_and_school_supply_stores",
            "swimming_pools_sales",
            "t_ui_travel_germany",
            "tailors_alterations",
            "tax_payments_government_agencies",
            "tax_preparation_services",
            "taxicabs_limousines",
            "telecommunication_equipment_and_telephone_sales",
            "telecommunication_services",
            "telegraph_services",
            "tent_and_awning_shops",
            "testing_laboratories",
            "theatrical_ticket_agencies",
            "timeshares",
            "tire_retreading_and_repair",
            "tolls_bridge_fees",
            "tourist_attractions_and_exhibits",
            "towing_services",
            "trailer_parks_campgrounds",
            "transportation_services",
            "travel_agencies_tour_operators",
            "truck_stop_iteration",
            "truck_utility_trailer_rentals",
            "typesetting_plate_making_and_related_services",
            "typewriter_stores",
            "u_s_federal_government_agencies_or_departments",
            "uniforms_commercial_clothing",
            "used_merchandise_and_secondhand_stores",
            "utilities",
            "variety_stores",
            "veterinary_services",
            "video_amusement_game_supplies",
            "video_game_arcades",
            "video_tape_rental_stores",
            "vocational_trade_schools",
            "watch_jewelry_repair",
            "welding_repair",
            "wholesale_clubs",
            "wig_and_toupee_stores",
            "wires_money_orders",
            "womens_accessory_and_specialty_shops",
            "womens_ready_to_wear_stores",
            "wrecking_and_salvage_yards"
          ],
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "interval": {
        "enum": [
          "all_time",
          "daily",
          "monthly",
          "per_authorization",
          "weekly",
          "yearly"
        ],
        "type": "string"
      }
    },
    "required": [
      "amount",
      "interval"
    ],
    "title": "spending_limits_param",
    "type": "object"
  },
  "status_transition_timestamp_specs": {
    "properties": {
      "posted_at": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/range_query_specs"
          },
          {
            "type": "integer"
          }
        ]
      }
    },
    "title": "status_transition_timestamp_specs",
    "type": "object"
  },
  "subscription_cancel_creation_param": {
    "properties": {
      "cancellation_reason": {
        "$ref": "#/components/schemas/subscription_cancellation_reason_creation_param"
      },
      "enabled": {
        "type": "boolean"
      },
      "mode": {
        "enum": [
          "at_period_end",
          "immediately"
        ],
        "type": "string"
      },
      "proration_behavior": {
        "enum": [
          "always_invoice",
          "create_prorations",
          "none"
        ],
        "type": "string"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "subscription_cancel_creation_param",
    "type": "object"
  },
  "subscription_cancel_updating_param": {
    "properties": {
      "cancellation_reason": {
        "$ref": "#/components/schemas/subscription_cancellation_reason_updating_param"
      },
      "enabled": {
        "type": "boolean"
      },
      "mode": {
        "enum": [
          "at_period_end",
          "immediately"
        ],
        "type": "string"
      },
      "proration_behavior": {
        "enum": [
          "always_invoice",
          "create_prorations",
          "none"
        ],
        "type": "string"
      }
    },
    "title": "subscription_cancel_updating_param",
    "type": "object"
  },
  "subscription_cancellation_reason_creation_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "options": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "enum": [
                "customer_service",
                "low_quality",
                "missing_features",
                "other",
                "switched_service",
                "too_complex",
                "too_expensive",
                "unused"
              ],
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "required": [
      "enabled",
      "options"
    ],
    "title": "subscription_cancellation_reason_creation_param",
    "type": "object"
  },
  "subscription_cancellation_reason_updating_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "options": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "enum": [
                "customer_service",
                "low_quality",
                "missing_features",
                "other",
                "switched_service",
                "too_complex",
                "too_expensive",
                "unused"
              ],
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "required": [
      "enabled"
    ],
    "title": "subscription_cancellation_reason_updating_param",
    "type": "object"
  },
  "subscription_data_create_params": {
    "properties": {
      "description": {
        "maxLength": 500,
        "type": "string"
      },
      "effective_date": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "enum": [
              "current_period_end"
            ],
            "maxLength": 5000,
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      },
      "trial_period_days": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      }
    },
    "title": "subscription_data_create_params",
    "type": "object"
  },
  "subscription_data_params": {
    "properties": {
      "application_fee_percent": {
        "type": "number"
      },
      "default_tax_rates": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "description": {
        "maxLength": 500,
        "type": "string"
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "on_behalf_of": {
        "type": "string"
      },
      "transfer_data": {
        "$ref": "#/components/schemas/transfer_data_specs"
      },
      "trial_end": {
        "format": "unix-time",
        "type": "integer"
      },
      "trial_period_days": {
        "type": "integer"
      }
    },
    "title": "subscription_data_params",
    "type": "object"
  },
  "subscription_data_update_params": {
    "properties": {
      "description": {
        "maxLength": 500,
        "type": "string"
      },
      "effective_date": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "enum": [
              "current_period_end"
            ],
            "maxLength": 5000,
            "type": "string"
          },
          {
            "format": "unix-time",
            "type": "integer"
          }
        ]
      },
      "trial_period_days": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      }
    },
    "title": "subscription_data_update_params",
    "type": "object"
  },
  "subscription_item_create_params": {
    "properties": {
      "billing_thresholds": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/item_billing_thresholds_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "metadata": {
        "$ref": "#/components/schemas/map_of_string"
      },
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "price_data": {
        "$ref": "#/components/schemas/recurring_price_data"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "title": "subscription_item_create_params",
    "type": "object"
  },
  "subscription_item_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/subscription_item"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "SubscriptionItemList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "subscription_item_update_params": {
    "properties": {
      "billing_thresholds": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/item_billing_thresholds_param"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "clear_usage": {
        "type": "boolean"
      },
      "deleted": {
        "type": "boolean"
      },
      "id": {
        "maxLength": 5000,
        "type": "string"
      },
      "metadata": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/map_of_string"
          },
          {
            "enum": [
              ""
            ],
            "type": "string"
          }
        ]
      },
      "price": {
        "maxLength": 5000,
        "type": "string"
      },
      "price_data": {
        "$ref": "#/components/schemas/recurring_price_data"
      },
      "quantity": {
        "type": "integer"
      },
      "tax_rates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "title": "subscription_item_update_params",
    "type": "object"
  },
  "subscription_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/subscription"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "SubscriptionList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "subscription_pause_param": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "title": "subscription_pause_param",
    "type": "object"
  },
  "subscription_payment_method_options_param": {
    "properties": {
      "mandate_options": {
        "$ref": "#/components/schemas/invoice_mandate_options_card"
      },
      "network": {
        "enum": [
          "amex",
          "cartes_bancaires",
          "diners",
          "discover",
          "interac",
          "jcb",
          "mastercard",
          "unionpay",
          "unknown",
          "visa"
        ],
        "maxLength": 5000,
        "type": "string",
        "x-bypass-validation": true
      },
      "request_three_d_secure": {
        "enum": [
          "any",
          "automatic"
        ],
        "type": "string"
      }
    },
    "title": "subscription_payment_method_options_param",
    "type": "object"
  },
  "subscription_schedules_param": {
    "properties": {
      "days_until_due": {
        "type": "integer"
      }
    },
    "title": "subscription_schedules_param",
    "type": "object"
  },
  "subscription_schedules_resource_schedule_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/subscription_schedule"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/subscription_schedules",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "SubscriptionSchedulesResourceScheduleList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "subscription_update_creation_param": {
    "properties": {
      "default_allowed_updates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "enum": [
                "price",
                "promotion_code",
                "quantity"
              ],
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "enabled": {
        "type": "boolean"
      },
      "products": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "$ref": "#/components/schemas/subscription_update_product_param"
            },
            "type": "array"
          }
        ]
      },
      "proration_behavior": {
        "enum": [
          "always_invoice",
          "create_prorations",
          "none"
        ],
        "type": "string"
      }
    },
    "required": [
      "default_allowed_updates",
      "enabled",
      "products"
    ],
    "title": "subscription_update_creation_param",
    "type": "object"
  },
  "subscription_update_product_param": {
    "properties": {
      "prices": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "product": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "prices",
      "product"
    ],
    "title": "subscription_update_product_param",
    "type": "object"
  },
  "subscription_update_updating_param": {
    "properties": {
      "default_allowed_updates": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "enum": [
                "price",
                "promotion_code",
                "quantity"
              ],
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "enabled": {
        "type": "boolean"
      },
      "products": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "$ref": "#/components/schemas/subscription_update_product_param"
            },
            "type": "array"
          }
        ]
      },
      "proration_behavior": {
        "enum": [
          "always_invoice",
          "create_prorations",
          "none"
        ],
        "type": "string"
      }
    },
    "title": "subscription_update_updating_param",
    "type": "object"
  },
  "subscriptions_items_subscription_item_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/subscription_item"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/subscription_items",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "SubscriptionsItemsSubscriptionItemList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "subscriptions_resource_payment_settings": {
    "properties": {
      "payment_method_options": {
        "properties": {
          "acss_debit": {
            "oneOf": [
              {
                "enum": [
                  ""
                ],
                "type": "string"
              },
              {
                "properties": {
                  "mandate_options": {
                    "properties": {
                      "transaction_type": {
                        "enum": [
                          "business",
                          "personal"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "verification_method": {
                    "enum": [
                      "automatic",
                      "instant",
                      "microdeposits"
                    ],
                    "type": "string",
                    "x-bypass-validation": true
                  }
                },
                "type": "object"
              }
            ]
          },
          "bancontact": {
            "oneOf": [
              {
                "enum": [
                  ""
                ],
                "type": "string"
              },
              {
                "properties": {
                  "preferred_language": {
                    "enum": [
                      "de",
                      "en",
                      "fr",
                      "nl"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            ]
          },
          "card": {
            "oneOf": [
              {
                "enum": [
                  ""
                ],
                "type": "string"
              },
              {
                "properties": {
                  "mandate_options": {
                    "properties": {
                      "amount": {
                        "type": "integer"
                      },
                      "amount_type": {
                        "enum": [
                          "fixed",
                          "maximum"
                        ],
                        "type": "string"
                      },
                      "description": {
                        "maxLength": 200,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "network": {
                    "enum": [
                      "amex",
                      "cartes_bancaires",
                      "diners",
                      "discover",
                      "interac",
                      "jcb",
                      "mastercard",
                      "unionpay",
                      "unknown",
                      "visa"
                    ],
                    "maxLength": 5000,
                    "type": "string",
                    "x-bypass-validation": true
                  },
                  "request_three_d_secure": {
                    "enum": [
                      "any",
                      "automatic"
                    ],
                    "type": "string"
                  }
                },
                "title": "subscription_payment_method_options_param",
                "type": "object"
              }
            ]
          },
          "customer_balance": {
            "oneOf": [
              {
                "enum": [
                  ""
                ],
                "type": "string"
              },
              {
                "properties": {
                  "bank_transfer": {
                    "properties": {
                      "eu_bank_transfer": {
                        "properties": {
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "country"
                        ],
                        "title": "eu_bank_transfer_param",
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "title": "bank_transfer_param",
                    "type": "object"
                  },
                  "funding_type": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            ]
          },
          "konbini": {
            "oneOf": [
              {
                "enum": [
                  ""
                ],
                "type": "string"
              },
              {
                "properties": {
                },
                "type": "object"
              }
            ]
          },
          "us_bank_account": {
            "oneOf": [
              {
                "enum": [
                  ""
                ],
                "type": "string"
              },
              {
                "properties": {
                  "financial_connections": {
                    "properties": {
                      "permissions": {
                        "items": {
                          "enum": [
                            "balances",
                            "ownership",
                            "payment_method",
                            "transactions"
                          ],
                          "maxLength": 5000,
                          "type": "string",
                          "x-bypass-validation": true
                        },
                        "type": "array"
                      }
                    },
                    "title": "invoice_linked_account_options_param",
                    "type": "object"
                  },
                  "verification_method": {
                    "enum": [
                      "automatic",
                      "instant",
                      "microdeposits"
                    ],
                    "type": "string",
                    "x-bypass-validation": true
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "title": "payment_method_options",
        "type": "object"
      },
      "payment_method_types": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "items": {
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "boleto",
                "card",
                "customer_balance",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "konbini",
                "link",
                "paynow",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-bypass-validation": true
            },
            "type": "array"
          }
        ]
      },
      "save_default_payment_method": {
        "enum": [
          "off",
          "on_subscription"
        ],
        "type": "string"
      }
    },
    "title": "subscriptions_resource_payment_settings",
    "type": "object"
  },
  "subscriptions_subscription_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/subscription"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/subscriptions",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "SubscriptionsSubscriptionList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "tax_i_ds_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/tax_id"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TaxIDsList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "tax_id_collection_params": {
    "properties": {
      "enabled": {
        "type": "boolean"
      }
    },
    "required": [
      "enabled"
    ],
    "title": "tax_id_collection_params",
    "type": "object"
  },
  "tax_param": {
    "properties": {
      "ip_address": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "title": "tax_param",
    "type": "object"
  },
  "tax_rates_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/tax_rate"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/tax_rates",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TaxRatesList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "terminal_configuration_configuration_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/terminal.configuration"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/terminal/configurations",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TerminalConfigurationConfigurationList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "terminal_location_location_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/terminal.location"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/terminal/locations",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TerminalLocationLocationList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "terminal_reader_retrieve_reader": {
    "properties": {
      "data": {
        "description": "A list of readers",
        "items": {
          "$ref": "#/components/schemas/terminal.reader"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TerminalReaderRetrieveReader",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "tier": {
    "properties": {
      "flat_amount": {
        "type": "integer"
      },
      "flat_amount_decimal": {
        "format": "decimal",
        "type": "string"
      },
      "unit_amount": {
        "type": "integer"
      },
      "unit_amount_decimal": {
        "format": "decimal",
        "type": "string"
      },
      "up_to": {
        "oneOf": [
          {
            "enum": [
              "inf"
            ],
            "maxLength": 5000,
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      }
    },
    "required": [
      "up_to"
    ],
    "title": "tier",
    "type": "object"
  },
  "tipping": {
    "properties": {
      "aud": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "cad": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "chf": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "czk": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "dkk": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "eur": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "gbp": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "hkd": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "myr": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "nok": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "nzd": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "sek": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "sgd": {
        "$ref": "#/components/schemas/currency_specific_config"
      },
      "usd": {
        "$ref": "#/components/schemas/currency_specific_config"
      }
    },
    "title": "tipping",
    "type": "object"
  },
  "tipping_config": {
    "properties": {
      "amount_eligible": {
        "type": "integer"
      }
    },
    "title": "tipping_config",
    "type": "object"
  },
  "token_create_bank_account": {
    "properties": {
      "account_holder_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "account_holder_type": {
        "enum": [
          "company",
          "individual"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "account_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "account_type": {
        "enum": [
          "checking",
          "futsu",
          "savings",
          "toza"
        ],
        "maxLength": 5000,
        "type": "string"
      },
      "country": {
        "maxLength": 5000,
        "type": "string"
      },
      "currency": {
        "type": "string"
      },
      "routing_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "account_number",
      "country"
    ],
    "title": "token_create_bank_account",
    "type": "object",
    "x-bypass-validation": true
  },
  "token_params": {
    "properties": {
      "token": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "token"
    ],
    "title": "token_params",
    "type": "object"
  },
  "topup_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/topup"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/topups",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TopupList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "tos_acceptance_specs": {
    "properties": {
      "date": {
        "format": "unix-time",
        "type": "integer"
      },
      "ip": {
        "type": "string"
      },
      "service_agreement": {
        "maxLength": 5000,
        "type": "string"
      },
      "user_agent": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "tos_acceptance_specs",
    "type": "object"
  },
  "transfer_data_creation_params": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "destination": {
        "type": "string"
      }
    },
    "required": [
      "destination"
    ],
    "title": "transfer_data_creation_params",
    "type": "object"
  },
  "transfer_data_params": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "destination": {
        "type": "string"
      }
    },
    "required": [
      "destination"
    ],
    "title": "transfer_data_params",
    "type": "object"
  },
  "transfer_data_specs": {
    "properties": {
      "amount": {
        "type": "integer"
      },
      "amount_percent": {
        "type": "number"
      },
      "destination": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "destination"
    ],
    "title": "transfer_data_specs",
    "type": "object"
  },
  "transfer_data_update_params": {
    "properties": {
      "amount": {
        "type": "integer"
      }
    },
    "title": "transfer_data_update_params",
    "type": "object"
  },
  "transfer_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/transfer"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/transfers",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TransferList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "transfer_reversal_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/transfer_reversal"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TransferReversalList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "transfer_schedule_specs": {
    "properties": {
      "delay_days": {
        "oneOf": [
          {
            "enum": [
              "minimum"
            ],
            "maxLength": 5000,
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      },
      "interval": {
        "enum": [
          "daily",
          "manual",
          "monthly",
          "weekly"
        ],
        "maxLength": 5000,
        "type": "string",
        "x-bypass-validation": true
      },
      "monthly_anchor": {
        "type": "integer"
      },
      "weekly_anchor": {
        "enum": [
          "friday",
          "monday",
          "saturday",
          "sunday",
          "thursday",
          "tuesday",
          "wednesday"
        ],
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "transfer_schedule_specs",
    "type": "object"
  },
  "transform_usage_param": {
    "properties": {
      "divide_by": {
        "type": "integer"
      },
      "round": {
        "enum": [
          "down",
          "up"
        ],
        "type": "string"
      }
    },
    "required": [
      "divide_by",
      "round"
    ],
    "title": "transform_usage_param",
    "type": "object"
  },
  "treasury_financial_accounts_resource_financial_account_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/treasury.financial_account"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/treasury/financial_accounts",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryFinancialAccountsResourceFinancialAccountList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_inbound_transfers_resource_inbound_transfer_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.inbound_transfer"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryInboundTransfersResourceInboundTransferList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_outbound_payments_resource_outbound_payment_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.outbound_payment"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/treasury/outbound_payments",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryOutboundPaymentsResourceOutboundPaymentList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_outbound_transfers_resource_outbound_transfer_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.outbound_transfer"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryOutboundTransfersResourceOutboundTransferList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_param": {
    "properties": {
      "received_debit": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "received_debit"
    ],
    "title": "treasury_param",
    "type": "object"
  },
  "treasury_received_credits_resource_credit_reversal_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.credit_reversal"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryReceivedCreditsResourceCreditReversalList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_received_credits_resource_received_credit_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.received_credit"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryReceivedCreditsResourceReceivedCreditList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_received_debits_resource_debit_reversal_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.debit_reversal"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryReceivedDebitsResourceDebitReversalList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_received_debits_resource_received_debit_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.received_debit"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryReceivedDebitsResourceReceivedDebitList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_settings_specs": {
    "properties": {
      "tos_acceptance": {
        "$ref": "#/components/schemas/settings_terms_of_service_specs"
      }
    },
    "title": "treasury_settings_specs",
    "type": "object"
  },
  "treasury_transactions_resource_transaction_entry_list": {
    "nullable": true,
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.transaction_entry"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "pattern": "^/v1/treasury/transaction_entries",
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryTransactionsResourceTransactionEntryList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "treasury_transactions_resource_transaction_list": {
    "properties": {
      "data": {
        "description": "Details about each object.",
        "items": {
          "$ref": "#/components/schemas/treasury.transaction"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "TreasuryTransactionsResourceTransactionList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "update_api_param": {
    "properties": {
      "exp_month": {
        "type": "integer"
      },
      "exp_year": {
        "type": "integer"
      }
    },
    "title": "update_api_param",
    "type": "object"
  },
  "update_param": {
    "properties": {
      "account_holder_type": {
        "enum": [
          "company",
          "individual"
        ],
        "type": "string"
      }
    },
    "title": "update_param",
    "type": "object"
  },
  "us_bank_account_source_params": {
    "properties": {
      "account_holder_name": {
        "maxLength": 5000,
        "type": "string"
      },
      "account_number": {
        "maxLength": 5000,
        "type": "string"
      },
      "routing_number": {
        "maxLength": 5000,
        "type": "string"
      }
    },
    "title": "us_bank_account_source_params",
    "type": "object"
  },
  "usage_events_resource_usage_record_summary_list": {
    "properties": {
      "data": {
        "items": {
          "$ref": "#/components/schemas/usage_record_summary"
        },
        "type": "array"
      },
      "has_more": {
        "description": "True if this list has another page of items after this one that can be fetched.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
        "enum": [
          "list"
        ],
        "type": "string"
      },
      "url": {
        "description": "The URL where this list can be accessed.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "data",
      "has_more",
      "object",
      "url"
    ],
    "title": "UsageEventsResourceUsageRecordSummaryList",
    "type": "object",
    "x-expandableFields": [
      "data"
    ]
  },
  "verification_document_specs": {
    "properties": {
      "back": {
        "maxLength": 500,
        "type": "string"
      },
      "front": {
        "maxLength": 500,
        "type": "string"
      }
    },
    "title": "verification_document_specs",
    "type": "object"
  },
  "verification_specs": {
    "properties": {
      "document": {
        "$ref": "#/components/schemas/verification_document_specs"
      }
    },
    "title": "verification_specs",
    "type": "object"
  },
  "verifone_p400": {
    "properties": {
      "splashscreen": {
        "oneOf": [
          {
            "enum": [
              ""
            ],
            "type": "string"
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "title": "verifone_p400",
    "type": "object"
  }
}